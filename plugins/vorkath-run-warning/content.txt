package com.vorkathrunwarning;

import net.runelite.client.config.Alpha;
import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

import java.awt.Color;

@ConfigGroup("vorkathrunwarning")
public interface VorkathRunWarningConfig extends Config
{
	@ConfigItem(
		keyName = "displayTintWarning",
		name = "Display tint warning",
		description = "Configures whether to warn by coloring the screen.",
		position = 1
	)
	default boolean displayTintWarning() { return true; }

	@Alpha
	@ConfigItem(
		keyName = "tintColor",
		name = "Tint color",
		description = "Color used for the tint warning.",
		position = 2
	)
	default Color tintColor()
	{
		return new Color(255, 127, 127, 50);
	}

	@ConfigItem(
		keyName = "displayTextWarning",
		name = "Display text warning",
		description = "Configures whether to warn with a text box.",
		position = 3
	)
	default boolean displayTextWarning() { return true; }

	@ConfigItem(
		keyName = "textColor",
		name = "Text color",
		description = "Color used for the text warning.",
		position = 4
	)
	default Color textColor() { return Color.white; }
}

package com.vorkathrunwarning;

import com.google.inject.Provides;

import javax.inject.Inject;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.NpcID;
import net.runelite.api.events.NpcChanged;
import net.runelite.api.events.NpcDespawned;
import net.runelite.api.events.VarbitChanged;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import java.util.Set;

@Slf4j
@PluginDescriptor(
	name = "Vorkath Run Warning"
)
public class VorkathRunWarningPlugin extends Plugin
{
	private static final int RUN_VARIABLE_ID = 173;
	private static final Set<Integer> VORKATH_ALIVE_IDS = Set.of(
			NpcID.VORKATH,
			NpcID.VORKATH_8060,
			NpcID.VORKATH_8061,
			NpcID.VORKATH_11959);

	@Inject
	private Client client;

	@Inject
	private VorkathRunWarningConfig config;

	@Inject
	private VorkathRunWarningTintOverlay tintOverlay;

	@Inject
	private VorkathRunWarningTextOverlay textOverlay;

	@Inject
	private OverlayManager overlayManager;

	@Getter (AccessLevel.PACKAGE)
	private boolean shouldWarn;

	private boolean isFighting;


	@Override
	protected void startUp() throws Exception
	{
		updateShouldWarn();
		overlayManager.add(tintOverlay);
		overlayManager.add(textOverlay);
	}

	@Override
	protected void shutDown() throws Exception
	{
		overlayManager.remove(tintOverlay);
		overlayManager.remove(textOverlay);
	}

	@Subscribe
	public void onVarbitChanged(VarbitChanged event) {
		if(event.getVarpId() == RUN_VARIABLE_ID) {
			this.updateShouldWarn();
		}
	}

	@Subscribe
	public void onNpcChanged(NpcChanged event) {
		if (event.getOld().getId() == NpcID.VORKATH_8059 && event.getNpc().getId() == NpcID.VORKATH_8058) {
			isFighting = true;
			this.updateShouldWarn();
		}
	}

	@Subscribe
	public void onNpcDespawned(NpcDespawned event) {
		if (VORKATH_ALIVE_IDS.contains(event.getNpc().getId())) {
			isFighting = false;
			this.updateShouldWarn();
		}
	}

	private void updateShouldWarn() {
        this.shouldWarn = this.isFighting && this.isRunEnabled();
	}

	private boolean isRunEnabled() {
		return client.getVarpValue(RUN_VARIABLE_ID) == 1;
	}

	@Provides
	VorkathRunWarningConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(VorkathRunWarningConfig.class);
	}
}

package com.vorkathrunwarning;

import net.runelite.api.Client;
import net.runelite.client.ui.overlay.Overlay;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.components.TitleComponent;

import javax.inject.Inject;
import java.awt.*;

public class VorkathRunWarningTintOverlay extends Overlay {

    private final VorkathRunWarningConfig config;
    private final  VorkathRunWarningPlugin plugin;
    private final Client client;

    @Inject
    private VorkathRunWarningTintOverlay(VorkathRunWarningPlugin plugin, VorkathRunWarningConfig config, Client client) {
        this.plugin = plugin;
        this.config = config;
        this.client = client;
        setPosition(OverlayPosition.DYNAMIC);
    }

    @Override
    public Dimension render(Graphics2D graphics) {
        if (!this.plugin.isShouldWarn() || !this.config.displayTintWarning()) {
            return null;
        }
        Rectangle screenRect = new Rectangle(0, 0, this.client.getCanvasWidth(), this.client.getCanvasHeight());
        graphics.setColor(this.config.tintColor());
        graphics.fill(screenRect);
        graphics.draw(screenRect);
        TitleComponent pluginIndicator = TitleComponent.builder().text("Vorkath Run Warning Active").build();
        pluginIndicator.setPreferredLocation(new Point(8, 20));
        pluginIndicator.render(graphics);
        return null;
    }
}

package com.vorkathrunwarning;

import net.runelite.client.ui.overlay.OverlayPanel;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.components.TitleComponent;

import javax.inject.Inject;
import java.awt.Graphics2D;
import java.awt.Dimension;

public class VorkathRunWarningTextOverlay extends OverlayPanel {

    private final VorkathRunWarningConfig config;
    private final  VorkathRunWarningPlugin plugin;

    @Inject
    private VorkathRunWarningTextOverlay(VorkathRunWarningPlugin plugin, VorkathRunWarningConfig config) {
        this.plugin = plugin;
        this.config = config;
        setPosition(OverlayPosition.ABOVE_CHATBOX_RIGHT);
    }

    @Override
    public Dimension render(Graphics2D graphics) {
        if (!this.plugin.isShouldWarn() || !this.config.displayTextWarning()) {
            return null;
        }
        this.panelComponent.getChildren().add(TitleComponent.builder().text("Run Enabled!").color(this.config.textColor()).build());
        return super.render(graphics);
    }
}

package com.vorkathrunwarning;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class VorkathRunWarningPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(VorkathRunWarningPlugin.class);
		RuneLite.main(args);
	}
}
