package com.easylootsell;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class EasyLootSellTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(EasyLootSellPlugin.class);
		RuneLite.main(args);
	}
}

package com.easylootsell;


import com.google.inject.Provides;
import net.runelite.api.Client;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.menus.MenuManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;


import javax.inject.Inject;

@PluginDescriptor(
        name = "Easy Loot Sell",
        description = "Highlights items with more than 0 qty for easy identification while selling off a loot tab",
        tags = {"loot tab", "sell", "highlight", "loot", "prices", "deposit", "easy"}
)
public class EasyLootSellPlugin extends Plugin {
    static final String CONFIG_GROUP = "easylootsell";

    @Inject
    private Client client;

    @Inject
    private ConfigManager configManager;

    @Inject
    private EasyLootSellConfig config;

    @Inject
    private MenuManager menuManager;

    @Inject
    private EasyLootSellOverlay overlay;

    @Inject
    private OverlayManager overlayManager;

    @Provides
    EasyLootSellConfig provideConfig(ConfigManager configManager) {
        return configManager.getConfig(EasyLootSellConfig.class);
    }

    @Override
    protected void startUp() throws Exception {
        overlayManager.add(overlay);
    }

    @Override
    protected void shutDown() throws Exception {
        overlayManager.remove(overlay);

    }
}

package com.easylootsell;
import net.runelite.api.Client;
import net.runelite.api.widgets.ComponentID;
import net.runelite.api.widgets.Widget;
import net.runelite.api.widgets.WidgetItem;
import net.runelite.client.game.ItemManager;
import net.runelite.client.ui.overlay.WidgetItemOverlay;

import javax.inject.Inject;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;

public class EasyLootSellOverlay extends WidgetItemOverlay {

    private final Client client;
    private final ItemManager itemManager;
    private final EasyLootSellConfig config;
    @Inject
    public EasyLootSellOverlay(Client client, ItemManager itemManager, EasyLootSellPlugin plugin, EasyLootSellConfig config)
    {
        this.client = client;
        this.itemManager = itemManager;
        this.config = config;

        showOnInventory();
        showOnBank();
    }

    @Override
    public void renderItemOverlay(Graphics2D graphics, int itemId, WidgetItem itemWidget)
    {
        if (checkInterfaceIsHighlightable(itemWidget)) {
            int qty = itemWidget.getQuantity();
            /* highlight item if we have at least 1 in the loot tab for easy identification when selling */
            if (qty >= 1)
            {

                Color colorToUse =  getDesiredColor(config.desiredHighlightColor());
                Rectangle bounds = itemWidget.getCanvasBounds();
                final BufferedImage outline = itemManager.getItemOutline(itemId, itemWidget.getQuantity(), colorToUse);
                graphics.drawImage(outline, (int) bounds.getX(), (int) bounds.getY(), null);
            }
        }
    }

    private boolean checkInterfaceIsHighlightable(WidgetItem itemWidget)
    {
            Widget bankWidget = client.getWidget(ComponentID.BANK_ITEM_CONTAINER);
            if (bankWidget != null)
            {
                String bankTitle = client.getWidget(ComponentID.BANK_TITLE_BAR).getText();
                /* if the item is within the desired tab, it should be highlighted */

                if (bankTitle.contains(config.lootTabName()) && client.getWidget(ComponentID.BANK_ITEM_CONTAINER) != null) {
                    //return true;
                    return bankWidget.getId() == itemWidget.getWidget().getId();
                }
                return false;
            }
        return false;
    }

    private Color getDesiredColor(EasyLootSellConfig.desiredHighlightColor value) {
        switch (value.toString()){
            case "PINK":
                return Color.PINK;
            case "BLUE":
                return Color.BLUE;
            case "YELLOW":
                return Color.YELLOW;
            default:
                return Color.GREEN;
        }
    }

}

package com.easylootsell;

import lombok.RequiredArgsConstructor;
import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.ConfigSection;

@ConfigGroup(EasyLootSellPlugin.CONFIG_GROUP)
public interface EasyLootSellConfig extends Config {
    @ConfigSection(
            name = "Loot Tab Name",
            description = "Determines what bank tab is the loot tab, only include name, not estimated price (ex: Tab 9)",
            position = 0
    )
    String lootTabSection = "lootTabSection";

    @ConfigItem(
            keyName = "lootTabName",
            name = "Loot Tab Name",
            description = "Name of the desired loot tab, only include the tab name and not the price estimate (ex: Tab 9), or blank for all items",
            position = 1,
            section = "lootTabSection"
    )
    default String lootTabName() {return "Tab 9";}

    @RequiredArgsConstructor
    enum desiredHighlightColor {

        GREEN("GREEN"),
        BLUE("BLUE"),
        YELLOW("YELLOW"),
        PINK("PINK"),
        ;

        private final String value;

        @Override
        public String toString() {
            return value;
        }
    }

    @ConfigItem(
            keyName = "highlightColor",
            name = "Highlight Color",
            description = "The color items within the loot tab will be highlighted for easier viewing",
            position = 2,
            section = "lootTabSection"
    )
    default desiredHighlightColor desiredHighlightColor() {return desiredHighlightColor.GREEN;}
}

package com.easylootsell;

public interface EasyLootSell {
}

