package com.ToACustomPresets;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class ToACustomPresets
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(ToACustomPresetsPlugin.class);
		RuneLite.main(args);
	}
}
package com.ToACustomPresets;

import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.ChatMessageType;
import net.runelite.api.Client;
import net.runelite.api.events.*;
import net.runelite.api.widgets.*;
import net.runelite.api.GameState;
import net.runelite.api.events.GameStateChanged;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

@Slf4j
@PluginDescriptor(
	name = "ToA Custom Presets",
	description = "Allows you to customise the preset names in the ToA preset interface",
	tags = {"toa", "preset", "raids3", "pvm", "custom"}
)
public class ToACustomPresetsPlugin extends Plugin
{
	@Inject
	private Client client;

	@Inject
	private ToACustomPresetsConfig config;

	@Provides
	ToACustomPresetsConfig provideConfig(ConfigManager configmanager)
	{
		return configmanager.getConfig(ToACustomPresetsConfig.class);
	}


	@Override
	public void startUp()
	{


	}

	@Subscribe
	public void onClientTick(ClientTick e) throws Exception
	{


		try
		{
			final Widget toaover = client.getWidget(774, 99);
			final Widget[] toapresets = toaover.getChildren();
			toapresets[0].setText(config.preset1());
			toapresets[1].setText(config.preset2());
			toapresets[2].setText(config.preset3());
			toapresets[3].setText(config.preset4());
			toapresets[4].setText(config.preset5());
		}
		catch (NullPointerException npe)
		{

		}


	}
}



package com.ToACustomPresets;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("ToACustomPresets")
public interface ToACustomPresetsConfig extends Config
{
	@ConfigItem(
		position = 1,
		keyName = "preset1",
		name = "Preset 1",
		description = "Text that should be displayed in the preset slot"
	)
	default String preset1()
	{
		return "Preset 1";
	}

	@ConfigItem(
		position = 2,
		keyName = "preset2",
		name = "Preset 2",
		description = "Text that should be displayed in the preset slot"
	)
	default String preset2()
	{
		return "Preset 2";
	}

	@ConfigItem(
		position = 3,
		keyName = "preset3",
		name = "Preset 3",
		description = "Text that should be displayed in the preset slot"
	)
	default String preset3()
	{
		return "Preset 3";
	}

	@ConfigItem(
		position = 4,
		keyName = "preset4",
		name = "Preset 4",
		description = "Text that should be displayed in the preset slot"
	)
	default String preset4()
	{
		return "Preset 4";
	}

	@ConfigItem(
		position = 5,
		keyName = "preset5",
		name = "Preset 5",
		description = "Text that should be displayed in the preset slot"
	)
	default String preset5()
	{
		return "Preset 5";
	}
}

