package com.daynightbrightness;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class DayNightBrightnessPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(DayNightBrightnessPlugin.class);
		RuneLite.main(args);
	}
}
package com.daynightbrightness;

import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.GameState;
import net.runelite.api.events.GameStateChanged;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

import java.time.LocalTime;

@Slf4j
@PluginDescriptor(
	name = "Day & Night Brightness"
)
public class DayNightBrightnessPlugin extends Plugin
{
	@Inject
	private Client client;

	@Inject
	private DayNightBrightnessConfig config;

	@Inject
	private ConfigManager configManager;

	@Override
	protected void startUp() throws Exception
	{
		log.info("Day & Night Brightness started!");
	}

	@Override
	protected void shutDown() throws Exception
	{
		log.info("Day & Night Brightness stopped!");
	}

	@Subscribe
	public void onGameStateChanged(GameStateChanged gameStateChanged)
	{
		if (gameStateChanged.getGameState() == GameState.LOGGED_IN) {
			LocalTime currentTime = LocalTime.now();

			if (currentTime.isAfter(LocalTime.of(config.dayHour(), 0)) && currentTime.isBefore(LocalTime.of(config.nightHour(), 0))) {
				// Run the script to set the brightness to the configured 'day' value
				client.runScript(3966, 15, config.dayBrightness());
			} else {
				// Run the script to set the brightness to the configured 'night' value
				client.runScript(3966, 15, config.nightBrightness());
			}
		}
	}

	@Provides
	DayNightBrightnessConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(DayNightBrightnessConfig.class);
	}
}

package com.daynightbrightness;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("daynightbrightness")
public interface DayNightBrightnessConfig extends Config
{
	@ConfigItem(
		keyName = "dayBrightnessValue",
		name = "Day Time Brightness",
		description = "The day time brightness value (0 = darkest, 30 = brightest)",
		position = 2
	)
	default int dayBrightness()
	{
		return 30;
	}

	@ConfigItem(
		keyName = "nightBrightnessValue",
		name = "Night Time Brightness",
		description = "The night time brightness value (0 = darkest, 30 = brightest)",
		position = 3
	)
	default int nightBrightness()
	{
		return 0;
	}

	@ConfigItem(
		keyName = "dayHour",
		name = "Day Hour",
		description = "The hour when it will be day",
		position = 4
	)
	default int dayHour()
	{
		return 8;
	}

	@ConfigItem(
		keyName = "nightHour",
		name = "Night Hour",
		description = "The hour when it will be night",
		position = 5
	)
	default int nightHour()
	{
		return 22;
	}
}

