package com.surgepotionnotifier;

import net.runelite.api.widgets.WidgetItem;
import net.runelite.client.game.ItemManager;
import net.runelite.client.ui.overlay.WidgetItemOverlay;
import net.runelite.client.util.ColorUtil;
import net.runelite.client.util.ImageUtil;

import javax.inject.Inject;
import java.awt.*;
import java.awt.image.BufferedImage;

class SurgePotionNotifierOverlay extends WidgetItemOverlay {
    private final ItemManager itemManager;
    private final SurgePotionNotifierPlugin plugin;
    private final SurgePotionNotifierConfig config;

    @Inject
    private SurgePotionNotifierOverlay(ItemManager itemManager, SurgePotionNotifierPlugin plugin, SurgePotionNotifierConfig config) {
        this.itemManager = itemManager;
        this.plugin = plugin;
        this.config = config;
        showOnInventory();
    }

    @Override
    public void renderItemOverlay(Graphics2D graphics, int itemId, WidgetItem itemWidget) {
        if (plugin.getSurgePotionVariationIds().contains(itemId) && !plugin.isSurgeOnCooldown()) {
            Color color = config.getHighlightColor();
            if (color != null) {
                Rectangle bounds = itemWidget.getCanvasBounds();
                if (config.outlineSurgePotion()) {
                    final BufferedImage outline = itemManager.getItemOutline(itemId, itemWidget.getQuantity(), color);
                    graphics.drawImage(outline, (int) bounds.getX(), (int) bounds.getY(), null);
                }

                if (config.fillSurgePotion()) {
                    final Color fillColor = ColorUtil.colorWithAlpha(color, config.fillSurgePotionOpacity());
                    Image image = ImageUtil.fillImage(itemManager.getImage(itemId, itemWidget.getQuantity(), false), fillColor);
                    graphics.drawImage(image, (int) bounds.getX(), (int) bounds.getY(), null);
                }
            }
        }
    }
}

package com.surgepotionnotifier;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.Range;

import java.awt.*;

@ConfigGroup("surgepotionnotifier")
public interface SurgePotionNotifierConfig extends Config
{
	@ConfigItem(
		position = 0,
		keyName = "highlightColor",
		name = "Highlight Color",
		description = "Color to highlight your surge potion when it's ready to drink"
	)
	default Color getHighlightColor()
	{
		return new Color(0, 231, 255);
	}

	@ConfigItem(
			position = 1,
			keyName = "fillSurgePotion",
			name = "Fill Surge Potion",
			description = "Fill in the surge potion with the highlight color"
	)
	default boolean fillSurgePotion() {
		return false;
	}

	@Range(
			max = 255
	)
	@ConfigItem(
			position = 2,
			keyName =  "fillSurgePotiontOpacity",
			name = "Fill Opacity",
			description = "The opacity of the highlight color when filling in the Surge potion"
	)
	default int fillSurgePotionOpacity() {
		return 50;
	}

	@ConfigItem(
			position = 3,
			keyName = "outlineSurgePotion",
			name = "Outline Surge Potion",
			description = "Outline the surge potion with the highlight color"
	)
	default boolean outlineSurgePotion() {
		return true;
	}

	@ConfigItem(
			position = 4,
			keyName = "enableNotifier",
			name = "Enable Notifier",
			description = "Enable a system notifier when your surge potion is ready to be used"
	)
	default boolean enableNotifier() {
		return false;
	}
}

package com.surgepotionnotifier;

import com.google.inject.Provides;
import lombok.extern.slf4j.Slf4j;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;
import net.runelite.api.Client;
import net.runelite.api.ItemContainer;
import net.runelite.api.events.GameTick;
import net.runelite.api.events.MenuOptionClicked;
import net.runelite.api.gameval.ItemID;
import net.runelite.api.gameval.InventoryID;
import net.runelite.api.gameval.VarbitID;
import net.runelite.client.Notifier;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.game.ItemVariationMapping;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import javax.inject.Inject;

@Slf4j
@PluginDescriptor(
	name = "Surge Potion Notifier"
)
public class SurgePotionNotifierPlugin extends Plugin {
	private Collection<Integer> SURGE_POTION_VARIATION_IDS;
	private final List<Integer> SURGE_POTION_ITEM_IDS = List.of(
			ItemID._1DOSESURGE,
			ItemID._2DOSESURGE,
			ItemID._3DOSESURGE,
			ItemID._4DOSESURGE
	);

	private Collection<Integer> getAllVariations(List<Integer> itemIds) {
		return itemIds.stream()
				.map(ItemVariationMapping::getVariations)
				.flatMap(Collection::stream)
				.collect(Collectors.toList());
	}

	public Collection<Integer> getSurgePotionVariationIds() {
		return SURGE_POTION_VARIATION_IDS;
	}

	@Inject
	private Client client;

	@Inject
	private SurgePotionNotifierConfig config;

	@Inject
	private SurgePotionNotifierOverlay overlay;

	@Inject
	private OverlayManager overlayManager;

	@Inject
	private Notifier notifier;

	private int surgePotionTimer = -1;
	private boolean hasNotified = false;


	@Override
	protected void startUp() throws Exception {
		SURGE_POTION_VARIATION_IDS = getAllVariations(SURGE_POTION_ITEM_IDS);
		overlayManager.add(overlay);
	}

	@Override
	protected void shutDown() throws Exception {
		overlayManager.remove(overlay);
	}

	@Subscribe
	public void onMenuOptionClicked(MenuOptionClicked event) {
		if (event.getMenuOption().contains("Drink") && event.getMenuTarget().contains("Surge potion")) {
			int actualCooldown = client.getVarbitValue(VarbitID.SURGE_POTION_TIMER);

			if (actualCooldown == 0 && surgePotionTimer <= 0) {
				surgePotionTimer = 50;
			}
		}
	}

	@Subscribe
	public void onGameTick(GameTick event) {
			surgePotionTimer = client.getVarbitValue(VarbitID.SURGE_POTION_TIMER);

		if (surgePotionTimer == 0) {
			if (!hasNotified) {
				notifyUser();
				hasNotified = true;
			}
		} else {
			hasNotified = false;
		}
	}

	public boolean isSurgeOnCooldown() {
		return surgePotionTimer > 0;
	}

	@Provides
	SurgePotionNotifierConfig provideConfig(ConfigManager configManager) {
		return configManager.getConfig(SurgePotionNotifierConfig.class);
	}

	private void notifyUser() {
		if (config.enableNotifier()) {
			ItemContainer playerInventory = client.getItemContainer(InventoryID.INV);

			if (playerInventory != null && SURGE_POTION_VARIATION_IDS.stream().anyMatch(playerInventory::contains)) {
				notifier.notify("You can drink another dose of a surge potion");
			}
		}
	}
}

package com.surgepotionnotifier;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class SurgePotionNotifierTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(SurgePotionNotifierPlugin.class);
		RuneLite.main(args);
	}
}
