package com.blended420.bankvalue;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class BankValuePluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(BankValuePlugin.class);
		RuneLite.main(args);
	}
}
package com.blended420.bankvalue;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("bankValue")
public interface BankValueConfig extends Config
{
	@ConfigItem(
		keyName = "showPriceSuffix",
		name = "Show Suffix",
		description = "Adds a K/M/B suffix to Bank Value"
	)
	default boolean showPriceSuffix()
	{
		return true;
	}
	@ConfigItem(
			keyName = "showHaValue",
			name = "Show High Alchemy Value",
			description = "Adds Ha Value of bank to the overlay"
	)
	default boolean showHaValue()
	{
		return true;
	}
}

package com.blended420.bankvalue;

import lombok.Value;

@Value
public class BankedItems{

    private long geValue;
    private long haValue;

}

package com.blended420.bankvalue;

import net.runelite.client.ui.overlay.Overlay;
import net.runelite.client.ui.overlay.OverlayLayer;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.OverlayPriority;
import net.runelite.client.ui.overlay.components.LineComponent;
import net.runelite.client.ui.overlay.components.PanelComponent;
import net.runelite.client.ui.overlay.components.TitleComponent;
import net.runelite.client.util.QuantityFormatter;

import javax.inject.Inject;
import java.awt.*;

public class BankValueOverlay extends Overlay {
    private final BankValueConfig config;
    private long haValue;
    private long geValue;
    private final PanelComponent panelComponent = new PanelComponent();

    @Inject
    public BankValueOverlay(BankValueConfig config){
        this.config = config;
        setPosition(OverlayPosition.TOP_LEFT);
        setPriority(OverlayPriority.HIGH);
        setLayer(OverlayLayer.ABOVE_SCENE);
    }
    @Override
    public Dimension render(Graphics2D graphics) {
        panelComponent.getChildren().clear();
        String overlayTitle = "Bank Info:";
        String geValueTxt =   formatNumber(geValue);
        String haValueTxt = formatNumber(haValue);
        panelComponent.getChildren().add(TitleComponent.builder()
                .text(overlayTitle)
                .color(Color.GREEN)
                .build());

        panelComponent.setPreferredSize(new Dimension(
                geValue ==0 ? 90: graphics.getFontMetrics().stringWidth(geValueTxt) + 60,
                0));
            panelComponent.getChildren().add(LineComponent.builder()
                    .left("GE:")
                    .right(geValueTxt)
                    .build());
            if(config.showHaValue()) {
                panelComponent.getChildren().add(LineComponent.builder()
                        .left("HA:")
                        .right(haValueTxt)
                        .build());
            }

        return panelComponent.render(graphics);
    }

    public void updateInventoryValue(long geValue,long haValue) {
        this.geValue = geValue;
        this.haValue =haValue;
    }

    private String formatNumber(long num){

            return config.showPriceSuffix() ? QuantityFormatter.quantityToStackSize(num) : QuantityFormatter.formatNumber(num);

    }
}

package com.blended420.bankvalue;

import com.google.inject.Provides;
import javax.inject.Inject;

import lombok.extern.slf4j.Slf4j;
import net.runelite.api.*;
import net.runelite.api.events.*;
import net.runelite.client.callback.ClientThread;
import net.runelite.client.chat.ChatCommandManager;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.game.ItemManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import java.io.IOException;

@Slf4j
@PluginDescriptor(
		name = "Bank Value Overlay",
		description = "Adds an overlay showing your overall bank value"
)
public class BankValuePlugin extends Plugin
{
	@Inject
	private Client client;
	@Inject
	ClientThread clientThread;
	@Inject
	private ItemManager itemManager;
	@Inject
	private BankValueConfig config;
	@Inject
	private ChatCommandManager commandManager;
	@Inject
	private BankValueOverlay overlay;
	@Inject
	private OverlayManager overlayManager;
	@Override
	protected void startUp() throws Exception
	{
		overlayManager.add(overlay);
	}

	@Override
	protected void shutDown() throws Exception
	{
		overlayManager.remove(overlay);
	}

	@Subscribe
	public void onItemContainerChanged(ItemContainerChanged e){
		if (e.getItemContainer() == client.getItemContainer(InventoryID.BANK)) {
			final Item[] items = client.getItemContainer(InventoryID.BANK).getItems();
			updateTotalBankValue(items);
		}
	}

	private void updateTotalBankValue(Item[] items){
		final BankedItems prices = calc(items);
		overlay.updateInventoryValue( prices.getGeValue(), prices.getHaValue());
	}

	BankedItems calc(Item[] items) {
		long geTotal = 0;
		long haTotal = 0;
		for (Item item : client.getItemContainer(InventoryID.BANK).getItems()) {
			final boolean isPlaceholder = itemManager.getItemComposition(item.getId()).getPlaceholderTemplateId() != -1;

			if (item.getId() != ItemID.BANK_FILLER || !isPlaceholder) {
				String name = itemManager.getItemComposition(item.getId()).getName();
				final int qty = item.getQuantity();
				geTotal += itemManager.getItemPrice(item.getId()) * qty;
				haTotal += getHaValue(item.getId()) * qty;
			}
		}
		return new BankedItems(geTotal,haTotal);
	}

	private int getHaValue(int itemId)
	{
		switch (itemId)
		{
			case ItemID.COINS_995:
				return 1;
			case ItemID.PLATINUM_TOKEN:
				return 1000;
			default:
				return itemManager.getItemComposition(itemId).getHaPrice();
		}
	}





	@Provides
	BankValueConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(BankValueConfig.class);
	}


	}

