package com.brastasauce.turaelskipping;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class TuraelSkippingTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(TuraelSkippingPlugin.class);
		RuneLite.main(args);
	}
}
/*
 * Copyright (c) 2022, BrastaSauce
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.brastasauce.turaelskipping;

import com.google.common.collect.ImmutableMap;
import lombok.Getter;
import net.runelite.api.coords.WorldPoint;

import javax.annotation.Nullable;
import java.util.Map;

@Getter
public enum Task
{
    BANSHEES("Banshees", new WorldPoint[]{new WorldPoint(3442,3542,0)}, "Morytania Slayer Tower", new String[]{"Slayer Ring: Morytania Slayer Tower"}, ""),
    BATS("Bats", new WorldPoint[]{new WorldPoint(3351,3490,0)}, "West of Paterdomus Temple", new String[]{"Ring of the elements: Earth Altar","Digsite/Lumberyard teleport"}, ""),
    BEARS("Bears", new WorldPoint[]{new WorldPoint(2700,3330,0)}, "Mine east of Ardougne", new String[]{"Fairy Ring: BLR","Quest Cape teleport"}, ""),
    BIRDS("Birds", new WorldPoint[]{new WorldPoint(3178,3359,0)}, "Champions' Guild", new String[]{"Combat Bracelet: Champions' Guild","Chronicle teleport"}, ""),
    CAVE_BUGS("Cave Bugs", new WorldPoint[]{new WorldPoint(3206,3217,0),new WorldPoint(2786,5318,0)}, "Dorgeshuun Dungeon", new String[]{"Fairy Ring: AJQ then north and west"}, "Bring a light source"),
    CAVE_CRAWLERS("Cave Crawlers", new WorldPoint[]{new WorldPoint(2789,3617,0),new WorldPoint(2795,9997,0)}, "Fremennik Slayer Dungeon", new String[]{"Slayer Ring: Rellekka Slayer Caves","Fairy Ring: AJR"}, ""),
    CAVE_SLIMES("Cave Slimes", new WorldPoint[]{new WorldPoint(3206,3217,0),new WorldPoint(2786,5318,0)}, "Dorgeshuun Dungeon", new String[]{"Fairy Ring: AJQ then north and west"}, "Bring a light source"),
    COWS("Cows", new WorldPoint[]{new WorldPoint(3257,3273,0)}, "Lumbridge Cow Pen", new String[]{"Lumbridge teleport"}, ""),
    CRAWLING_HANDS("Crawling Hands", new WorldPoint[]{new WorldPoint(3419,3571,0)}, "Morytania Slayer Tower", new String[]{"Slayer Ring: Morytania Slayer Tower"}, ""),
    DOGS("Dogs", new WorldPoint[]{new WorldPoint(3347,2783,0)}, "East of Sophanem", new String[]{"Pharaoh's Sceptre: Jaleustrophos (Option 2)"}, ""),
    DWARVES("Dwarves", new WorldPoint[]{new WorldPoint(2819,3490,0),new WorldPoint(2863,9878,0)}, "Under White Wolf Mountain", new String[]{"Construction Cape: Taverley","Redirected house tab"}, ""),
    GOBLINS("Goblins", new WorldPoint[]{new WorldPoint(3145,3301,0)}, "Southeast of Draynor Manor", new String[]{"Draynor Manor teleport tab"}, "Directly south of the Sourhog Cave"),
    GHOSTS("Ghosts", new WorldPoint[]{new WorldPoint(1639,3673,0),new WorldPoint(1693,10063,0)}, "Zeah Catacombs", new String[]{"Achievement Diary Cape: Kourend","Xeric's Talisman: Xeric's Heart"}, ""),
    ICEFIENDS("Icefiends", new WorldPoint[]{new WorldPoint(3007,3475,0)}, "Ice Mountain", new String[]{"Lassar teleport tab"}, ""),
    KALPHITE("Kalphite", new WorldPoint[]{new WorldPoint(3326,3122,0),new WorldPoint(3372,9528,0)}, "Outside Shantay Pass", new String[]{"Desert Amulet 4: Kalphite Cave"}, ""),
    LIZARDS("Lizards", new WorldPoint[]{new WorldPoint(3413,3035,0)}, "Al Kharid Desert (east of river)", new String[]{"Fairy Ring: DLQ"}, "Bring ice coolers"),
    MINOTAURS("Minotaurs", new WorldPoint[]{new WorldPoint(3084,3417,0),new WorldPoint(1875,5218,0)}, "First Floor Stronghold of Security", new String[]{"Skull Sceptre: Invoke"}, ""),
    MONKEYS("Monkeys", new WorldPoint[]{new WorldPoint(2713,2794,0)}, "Underneath Ape Atoll", new String[]{"Gnome Glider: Ookookolly Undri"}, "Run south and open trapdoor, Bring lightsource"),
    RATS("Rats", new WorldPoint[]{new WorldPoint(3240,3458,0),new WorldPoint(3237,9866,0)}, "Varrock Sewers, northeast entrance", new String[]{"Varrock teleport"}, ""),
    SCORPIONS("Scorpions", new WorldPoint[]{new WorldPoint(3299,3301,0)}, "Al Kharid Mine", new String[]{"Ring of the elements: Fire Altar","Ring of dueling: Emir's Arena"}, ""),
    SKELETONS("Skeletons", new WorldPoint[]{new WorldPoint(3352,3417,0)}, "Digsite", new String[]{"Master Scroll Book: Digsite","Digsite Pendant"}, "Bring a rope"),
    SOURHOGS("Sourhogs", new WorldPoint[]{new WorldPoint(3143,3347,0),new WorldPoint(3173,9688,0)}, "Sourhog Cave east of Draynor Manor", new String[]{"Draynor Manor teleport tab"}, ""),
    SPIDERS("Spiders", new WorldPoint[]{new WorldPoint(3168,3244,0)}, "Outside H.A.M. Hideout", new String[]{"Achievement Diary Cape: Twiggy O'Korn","Amulet of Glory: Draynor Village"}, ""),
    WOLVES("Wolves", new WorldPoint[]{new WorldPoint(2847,3498,0)}, "White Wolf Mountain", new String[]{"Gnome Glider: Sindarpos"}, ""),
    ZOMBIES("Zombies", new WorldPoint[]{new WorldPoint(3630,3530,0)}, "West of Ecto Altar", new String[]{"Ectophial: Empty"}, "Both Cows and Chickens count towards Zombie task");

    private static final Map<String, Task> tasks;

    private final String name;
    private final WorldPoint[] worldPoints; // Both surface and underground
    private final String location;
    private final String[] teleports;
    private final String info;

    static
    {
        ImmutableMap.Builder<String, Task> builder = new ImmutableMap.Builder<>();

        for (Task task : values())
        {
            builder.put(task.getName().toLowerCase(), task);
        }

        tasks = builder.build();
    }

    Task(String name, WorldPoint[] worldPoints, String location, String[] teleports, String info)
    {
        this.name = name;
        this.worldPoints = worldPoints;
        this.location = location;
        this.teleports = teleports;
        this.info = info;
    }

    @Nullable
    static Task getTask(String taskName)
    {
        return tasks.get(taskName.toLowerCase());
    }
}

/*
 * Copyright (c) 2022, BrastaSauce
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.brastasauce.turaelskipping;

import net.runelite.api.coords.WorldPoint;
import net.runelite.client.ui.overlay.worldmap.WorldMapPoint;
import net.runelite.client.util.ImageUtil;

import java.awt.image.BufferedImage;

public class TaskWorldMapPoint extends WorldMapPoint
{
    TaskWorldMapPoint(WorldPoint worldPoint)
    {
        super(worldPoint, null);

        BufferedImage taskWorldImage = ImageUtil.loadImageResource(TuraelSkippingPlugin.class, "/turael_chathead.png");

        this.setSnapToEdge(true);
        this.setJumpOnClick(true);
        this.setName("Turael Task");
        this.setImage(taskWorldImage);
    }
}

/*
 * Copyright (c) 2022, BrastaSauce
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.brastasauce.turaelskipping;

import com.google.inject.Provides;
import javax.inject.Inject;

import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.ChatMessageType;
import net.runelite.api.Client;
import net.runelite.api.coords.WorldPoint;
import net.runelite.api.events.ChatMessage;
import net.runelite.api.events.GameTick;
import net.runelite.api.widgets.ComponentID;
import net.runelite.api.widgets.Widget;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.ConfigChanged;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;
import net.runelite.client.ui.overlay.worldmap.WorldMapPointManager;
import net.runelite.client.util.Text;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Slf4j
@PluginDescriptor(
	name = "Turael Skipping"
)
public class TuraelSkippingPlugin extends Plugin
{
	private static final String TURAEL = "Turael";
	private static final String SPRIA = "Spria";
	private static final String AYA = "Aya";

	// NPC messages
	private static final Pattern SLAYER_ASSIGN_MESSAGE = Pattern.compile(".*(?:Your new task is to kill \\d+) (?<name>.+)(?:.)");
	private static final Pattern SLAYER_CURRENT_MESSAGE = Pattern.compile(".*(?:You're still hunting) (?<name>.+)(?:[,;] you have \\d+ to go.)");

	private boolean worldPointSet = false;

	@Getter
	private Task task;

	@Inject
	private Client client;

	@Inject
	private OverlayManager overlayManager;

	@Inject
	private WorldMapPointManager worldMapPointManager;

	@Inject
	private TuraelSkippingOverlay overlay;

	@Inject
	private TuraelSkippingConfig config;

	private void setTask(String taskName)
	{
		task = Task.getTask(taskName);
		createWorldPoint();
	}

	private void completeTask()
	{
		task = null;
		worldMapPointManager.removeIf(TaskWorldMapPoint.class::isInstance);
		worldPointSet = false;
	}

	private void createWorldPoint()
	{
		if (task != null && config.displayMapIcon() && !worldPointSet)
		{
			for (WorldPoint worldPoint : task.getWorldPoints())
			{
				worldMapPointManager.add(new TaskWorldMapPoint(worldPoint));
			}
			worldPointSet = true;
		}
	}

	@Subscribe
	public void onGameTick(GameTick gameTick)
	{
		// Getting tasks
		Widget npcName = client.getWidget(ComponentID.DIALOG_NPC_NAME);
		Widget npcDialog = client.getWidget(ComponentID.DIALOG_NPC_TEXT);
		if (npcDialog != null && npcName != null && (npcName.getText().equals(TURAEL) || npcName.getText().equals(SPRIA) || npcName.getText().equals(AYA)))
		{
			String npcText = Text.sanitizeMultilineText(npcDialog.getText());
			final Matcher mAssign = SLAYER_ASSIGN_MESSAGE.matcher(npcText);
			final Matcher mCurrent = SLAYER_CURRENT_MESSAGE.matcher(npcText);

			if (mAssign.find())
			{
				String name = mAssign.group("name");
				setTask(name);
			}

			if (mCurrent.find())
			{
				String name = mCurrent.group("name");
				setTask(name);
			}
		}
	}

	@Subscribe
	public void onChatMessage(ChatMessage event)
	{
		// Completing tasks
		if (event.getType() != ChatMessageType.GAMEMESSAGE && event.getType() != ChatMessageType.SPAM)
		{
			return;
		}

		String chatMessage = Text.removeTags(event.getMessage());

		if (chatMessage.startsWith("You've completed") && (chatMessage.contains("Slayer master") || chatMessage.contains("Slayer Master")))
		{
			completeTask();
		}
	}

	@Override
	protected void startUp() throws Exception
	{
		overlayManager.add(overlay);
	}

	@Override
	protected void shutDown() throws Exception
	{
		overlayManager.remove(overlay);
		task = null;
		worldMapPointManager.removeIf(TaskWorldMapPoint.class::isInstance);
	}

	@Subscribe
	public void onConfigChanged(ConfigChanged event)
	{
		if (event.getGroup().equals("turaelskipping"))
		{
			worldMapPointManager.removeIf(TaskWorldMapPoint.class::isInstance);
			worldPointSet = false;

			createWorldPoint();
		}
	}

	@Provides
	TuraelSkippingConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(TuraelSkippingConfig.class);
	}
}

/*
 * Copyright (c) 2022, BrastaSauce
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.brastasauce.turaelskipping;

import net.runelite.client.ui.overlay.OverlayPanel;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.components.LineComponent;

import javax.inject.Inject;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;

public class TuraelSkippingOverlay extends OverlayPanel
{
    private final TuraelSkippingPlugin plugin;
    private final TuraelSkippingConfig config;

    @Inject
    public TuraelSkippingOverlay(TuraelSkippingPlugin plugin, TuraelSkippingConfig config)
    {
        this.plugin = plugin;
        this.config = config;
        setPosition(OverlayPosition.BOTTOM_LEFT);
        setPreferredSize(new Dimension(25, 350));
    }

    @Override
    public Dimension render(Graphics2D graphics)
    {
        if (!config.displayInfo() || plugin.getTask() == null)
        {
            return null;
        }

        panelComponent.getChildren().add(LineComponent.builder().left(plugin.getTask().getLocation()).build());

        for (String teleport : plugin.getTask().getTeleports())
        {
            panelComponent.getChildren().add(LineComponent.builder().left("- " + teleport).leftColor(Color.LIGHT_GRAY).build());
        }

        if (!plugin.getTask().getInfo().isEmpty())
        {
            panelComponent.getChildren().add(LineComponent.builder().left(plugin.getTask().getInfo()).leftColor(Color.LIGHT_GRAY).build());
        }

        return super.render(graphics);
    }
}

/*
 * Copyright (c) 2022, BrastaSauce
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.brastasauce.turaelskipping;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("turaelskipping")
public interface TuraelSkippingConfig extends Config
{
	@ConfigItem(
			keyName = "displayMapIcon",
			name = "Display Map Icon",
			description = "Displays an icon on the world map where the task is located",
			position = 0
	)
	default boolean displayMapIcon()
	{
		return true;
	}

	@ConfigItem(
		keyName = "displayInfo",
		name = "Display Info",
		description = "Displays an infobox containing task information",
		position = 1
	)
	default boolean displayInfo()
	{
		return true;
	}
}

