package com.erishiongamesllc.totalsellingprice;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class TotalSellingPricePluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(TotalSellingPricePlugin.class);
		RuneLite.main(args);
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

public enum ShopInfo
{
	BANDIT_DUTY_FREE_GENERAL_STORE("Bandit Duty Free", 0.9f, 0.6f, 0.03f),
	MARTIN_THWAITS_LOST_AND_FOUND("Martin Thwait's Lost and Found.", 1.0f, 0.6f, 0.02f),
	WEST_ARDOUGNE_GENERAL_STORE("West Ardougne General Store", 1.2f, 0.55f, 0.02f),
	POLLNIVNEACH_GENERAL_STORE("Pollnivneach general store.", 1.0f, 0.55f, 0.01f),
	LEGENDS_GUILD_GENERAL_STORE("Legends Guild General Store.", 1.55f, 0.55f, 0.01f),
	;


	private final String name;
	private final float sellPercent;
	private final float buyPercent;
	private final float changePercent;

	ShopInfo(String name, float sellPercent, float buyPercent, float changePercent)
	{
		this.name = name;
		this.sellPercent = sellPercent;
		this.buyPercent = buyPercent;
		this.changePercent = changePercent;
	}

	public String getName()
	{
		return name;
	}

	public float getSellPercent()
	{
		return sellPercent;
	}

	public float getBuyPercent()
	{
		return buyPercent;
	}

	public float getChangePercent()
	{
		return changePercent;
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

import java.awt.Color;
import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.ConfigSection;

@ConfigGroup(TotalSellingPricePlugin.CONFIG_GROUP)
public interface TotalSellingPriceConfig extends Config
{
	@ConfigSection
	(
		name = "Sell amounts",
		description = "Choose what amounts you wish to see when calculating gold earned per world",
		position = 0
	)
		String sellAmounts = "Sell Amounts";

	@ConfigItem
	(
		keyName = "sell10",
		name = "Sell 10 per world",
		description = "",
		position = 0,
		section = sellAmounts
	)
		default boolean sell10()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sell20",
			name = "Sell 20 per world",
			description = "",
			position = 1,
			section = sellAmounts
		)
	default boolean sell20()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sell30",
			name = "Sell 30 per world",
			description = "",
			position = 2,
			section = sellAmounts
		)
	default boolean sell30()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sell40",
			name = "Sell 40 per world",
			description = "",
			position = 3,
			section = sellAmounts
		)
	default boolean sell40()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sell50",
			name = "Sell 50 per world",
			description = "",
			position = 4,
			section = sellAmounts
		)
	default boolean sell50()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sellAll",
			name = "Sell all per world",
			description = "",
			position = 5,
			section = sellAmounts
		)
	default boolean sellAll()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "sellCustom",
			name = "Sell custom amount per world",
			description = "",
			position = 6,
			section = sellAmounts
		)
	default boolean sellCustom()
	{
		return true;
	}

	@ConfigItem
		(
			keyName = "amountPerWorldToSell",
			name = "Amount to sell per world",
			description = "",
			position = 7,
			section = sellAmounts
		)
	default int amountPerWorldToSell()
	{
		return 1;
	}

	@ConfigItem
		(
			keyName = "calculateAmountOfWorldHopsNeeded",
			name = "Calculate amount of world hops to sell stack?",
			description = "",
			position = 1
		)
	default boolean calculateAmountOfWorldHopsNeeded()
	{
		return true;
	}

	@ConfigItem
	(
		keyName = "highlightColor",
		name = "Highlight Color",
		description = "The desired color for messages",
		position = 2
	)
	default Color highlightColor()
	{
		return Color.BLUE;
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

import lombok.Getter;
import net.runelite.api.ChatMessageType;
import net.runelite.api.Client;
import net.runelite.api.ItemComposition;
import net.runelite.api.events.GameTick;
import net.runelite.api.events.MenuOptionClicked;
import net.runelite.api.widgets.Widget;
import net.runelite.api.widgets.WidgetInfo;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.game.ItemManager;
import net.runelite.client.util.Text;
import javax.inject.Inject;
import java.util.Objects;

public class WidgetHandler {
    public static final int SHOP_WIDGET_ID = 19660801;
    public static final int SHOP_WIDGET_CHILD_TEXT_FIELD = 1;
    public static final int SHOP_INVENTORY_WIDGET_ID = 19660816;
    public static final int SHOP_PLAYER_INVENTORY_WIDGET_ID = 19726336;
    private Widget clickedWidget = null;
    private int clickedWidgetID = 0;
    private  MenuOptionClicked menuOptionClicked = null;
    private inventoryType clickedInventory = inventoryType.NONE;
    private String currentShopName = null;

	private ItemComposition itemComposition = null;

	private Widget[] shopItems = null;
	private Widget[] playerItems = null;


	@Getter
	private ItemData itemData = new ItemData();
	@Getter
	private ShopInfo currentShop = null;
	@Getter
	private int amountOfItemInShopInventory = 0;
	@Getter
	private int amountOfItemInPlayerInventory = 0;

	@Inject
    private Client client;

	@Inject
	private TotalSellingPricePlugin totalSellingPricePlugin;

    @Inject
    private ItemManager itemManager;

	@Inject
	private TotalSellingPriceConfig config;

	@Inject
	private ShopCalculator shopCalculator;

	@Subscribe
	public void onMenuOptionClicked(MenuOptionClicked clicked)
	{
		menuOptionClicked = clicked;

		if(!isShopOpen() || !isCheckingValue())
		{
			return;
		}

		currentShopName = getCurrentShopName();
		currentShop = getCurrentShopValue();

		if (currentShop == null)
		{
			return;
		}

		assignWidgetVariables();

		if (clickedInventory == inventoryType.NONE)
		{
			return;
		}
		if (clickedInventory == inventoryType.SHOP_INVENTORY)
		{
			createChatMessage("Buying from shops is not supported right now");
			return;
		}

		assignItemVariables();

		amountOfItemInPlayerInventory = findAmountOfItemInInventory(playerItems);
		amountOfItemInShopInventory = findAmountOfItemInInventory(shopItems);

		shopCalculator.calculateAllGoldSellingOptions();
	}

	@Subscribe
	public void onGameTick(GameTick gameTick)
	{
		if(currentShop != null && !isShopOpen())
		{
			resetVariables();
		}
	}

    private void assignWidgetVariables()
	{
        clickedWidget = menuOptionClicked.getWidget();
		assert clickedWidget != null;

		clickedWidgetID = clickedWidget.getId();
		clickedInventory = getClickedInventory(clickedWidgetID);
    }

	private void assignItemVariables()
	{
		itemComposition = itemManager.getItemComposition(menuOptionClicked.getItemId());

		itemData.setName(itemComposition.getName());
		itemData.setId(itemComposition.getId());
		itemData.setValue(itemComposition.getPrice());
		shopItems = Objects.requireNonNull(client.getWidget(SHOP_INVENTORY_WIDGET_ID)).getChildren();
		playerItems = Objects.requireNonNull(client.getWidget(SHOP_PLAYER_INVENTORY_WIDGET_ID)).getChildren();
	}

	private void resetVariables()
	{
		clickedWidget = null;
		clickedWidgetID = 0;
		menuOptionClicked = null;
		clickedInventory = inventoryType.NONE;
		currentShopName = null;
		currentShop = null;
		itemComposition = null;
		itemData = new ItemData();
		shopItems = null;
		playerItems = null;
		amountOfItemInShopInventory = 0;
		amountOfItemInPlayerInventory = 0;
	}

	private boolean isShopOpen()
	{
		return client.getWidget(WidgetInfo.SHOP_INVENTORY_ITEMS_CONTAINER) != null;
	}

	private boolean isCheckingValue()
	{
		return Text.removeTags(menuOptionClicked.getMenuOption()).equals("Value");
	}

    private String getCurrentShopName()
	{
        return Objects.requireNonNull(client.getWidget(SHOP_WIDGET_ID)).getChild(SHOP_WIDGET_CHILD_TEXT_FIELD).getText();
    }

    private inventoryType getClickedInventory(int widgetID)
	{
        switch(widgetID)
		{
            case SHOP_INVENTORY_WIDGET_ID: return inventoryType.SHOP_INVENTORY;
            case SHOP_PLAYER_INVENTORY_WIDGET_ID: return inventoryType.PLAYER_INVENTORY;
        }
        return inventoryType.NONE;
    }

	private ShopInfo getCurrentShopValue()
	{
		for (ShopInfo shopInfo : ShopInfo.values())
		{
			if (shopInfo.getName().equals(currentShopName))
			{
				return shopInfo;
			}
		}
		createChatMessage("this shop is not supported right now");
		return null;
	}

	private int findAmountOfItemInInventory(Widget[] inventory)
	{
		for (Widget item: inventory)
		{
			if (item.getName().contains(itemData.getName()))
			{
				return item.getItemQuantity();
			}
		}
		return 0;
	}








	public void createChatMessage(String message)
	{
		client.addChatMessage(ChatMessageType.GAMEMESSAGE, "", message, null);
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;


public class ItemData {
    private int id;
    private int value;
    private String name;
    private double lowAlchValue;
	private double highAlchValue;

    public ItemData(int id, int value, String name)
	{
        this.id = id;
        this.value = value;
        this.name = name;
        lowAlchValue = value * 0.4;
		highAlchValue = value * 0.6;
    }

    public ItemData()
	{
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getValue() {
        return value;
    }

    public void setValue(int value) {
        this.value = value;
		lowAlchValue = value * 0.4;
		highAlchValue = value * 0.6;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getLowAlchValue() {
        return lowAlchValue;
    }

    public void setLowAlchValue(int lowAlchValue) {
        this.lowAlchValue = lowAlchValue;
		value = (lowAlchValue * 5) / 2;
		highAlchValue = value * 0.6;
    }

	public double getHighAlchValue()
	{
		return highAlchValue;
	}

	public void setHighAlchValue(int highAlchValue)
	{
		this.highAlchValue = highAlchValue;
		value = (highAlchValue * 5) / 3;
		lowAlchValue = value * 0.4;
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

import static com.erishiongamesllc.totalsellingprice.TotalSellingPricePlugin.PLUGIN_NAME;
import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.*;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.EventBus;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

@Slf4j
@PluginDescriptor(
	name = PLUGIN_NAME
)
public class TotalSellingPricePlugin extends Plugin {
	public static final String PLUGIN_NAME = "Total Selling Price";
	public static final String CONFIG_GROUP = "totalsellingprice";

	@Inject
	private Client client;

	@Inject
	private WidgetHandler widgetHandler;

	@Inject
	private ShopCalculator shopCalculator;

	@Inject
	private TotalSellingPriceConfig config;

	@Inject
	private EventBus eventBus;

	@Override
	protected void startUp() throws Exception
	{
		eventBus.register(widgetHandler);
		eventBus.register(shopCalculator);
	}

	@Override
	protected void shutDown() throws Exception
	{
		eventBus.unregister(widgetHandler);
		eventBus.unregister(shopCalculator);
	}

	@Provides
	TotalSellingPriceConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(TotalSellingPriceConfig.class);
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

import javax.inject.Inject;

public class ShopCalculator
{
	@Inject
	private TotalSellingPriceConfig config;

	@Inject
	private WidgetHandler widgetHandler;

	public void calculateAllGoldSellingOptions()
	{
		if (config == null)
		{
			return;
		}
		if (config.sell10())
		{
			calculateGoldEarnedFromSelling(10);
		}
		if (config.sell20())
		{
			calculateGoldEarnedFromSelling(20);
		}
		if (config.sell30())
		{
			calculateGoldEarnedFromSelling(30);
		}
		if (config.sell40())
		{
			calculateGoldEarnedFromSelling(40);
		}
		if (config.sell50())
		{
			calculateGoldEarnedFromSelling(50);
		}
		if (config.sellAll())
		{
			calculateGoldEarnedFromSelling(widgetHandler.getAmountOfItemInPlayerInventory());
		}
		if (config.sellCustom() )
		{
			calculateGoldEarnedFromSelling(config.amountPerWorldToSell());
		}
	}

	private void calculateGoldEarnedFromSelling(int amountPerWorld)
	{
		int amountOfItemInShopInventory = widgetHandler.getAmountOfItemInShopInventory();
		int amountOfItemInPlayerInventory = widgetHandler.getAmountOfItemInPlayerInventory();

		int goldPerWorld = calculateGoldPerWorld(amountPerWorld, amountOfItemInShopInventory);

		int totalGold = (int) Math.floor(goldPerWorld * ((double) amountOfItemInPlayerInventory / amountPerWorld));
		int averageGold = (goldPerWorld / amountPerWorld);

		double percentOfMaxGold = calculateMaxGoldPercent(totalGold, amountOfItemInPlayerInventory);

		String colorAmountPerWorld = colorMessage(String.format("%,d", amountPerWorld));
		String colorGoldPerWorld = colorMessage(String.format("%,d", goldPerWorld));
		String colorAverageGold = colorMessage(String.format("%,d", averageGold));
		String colorTotalGold = colorMessage(String.format("%,d", totalGold));
		String colorPercent = colorMessage(String.format("%.2f", percentOfMaxGold));

		widgetHandler.createChatMessage("Sell " + colorAmountPerWorld + ": " + colorGoldPerWorld + " gold. Average: " + colorAverageGold + ". Total: " + colorTotalGold + ". Percent: " + colorPercent + ".");

		displayAmountOfWorldHopsNeeded(amountPerWorld);
	}

	private int calculateGoldPerWorld(int amountPerWorld, int amountInInventory)
	{
		int amountInShopInventory = amountInInventory;

		ShopInfo currentShop = widgetHandler.getCurrentShop();
		int currentGold = 0;
		float shopChange = currentShop.getChangePercent();

		for (int i = 0; i < amountPerWorld; i++)
		{
			float buyPercent = currentShop.getBuyPercent() - (shopChange * amountInShopInventory);

			//if try buy for less than 10%, buy for 10%
			if (buyPercent < .1f)
			{
				buyPercent = .1f;
			}

			int shopBuyPrice = (int) Math.floor(buyPercent * widgetHandler.getItemData().getValue());

			currentGold += shopBuyPrice;
			amountInShopInventory += 1;
		}
		return currentGold;
	}

	private float calculateMaxGoldPercent(int totalGold, int amountInPlayerInventory)
	{
		//calculate the max amount of gold possible
		int maxGoldPossible = calculateGoldPerWorld(1, 0) * amountInPlayerInventory;

		return (float) totalGold / maxGoldPossible;

	}

	private void displayAmountOfWorldHopsNeeded(int amountPerWorld)
	{
		if (!config.calculateAmountOfWorldHopsNeeded())
		{
			return;
		}

		int hopsNeeded = (widgetHandler.getAmountOfItemInPlayerInventory() / amountPerWorld);
		String colorHopsNeeded = colorMessage(String.format("%,d", hopsNeeded));
		widgetHandler.createChatMessage("World hops needed: " + colorHopsNeeded);
	}

	public String colorMessage(String message)
	{
		String color = Integer.toHexString(config.highlightColor().getRGB()).substring(2);
		return "<col=" + color + ">" + message + "</col>";
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongamesllc.totalsellingprice;

public enum inventoryType
{
	SHOP_INVENTORY,
	PLAYER_INVENTORY,
	NONE,
}
