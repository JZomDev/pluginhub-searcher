package dekvall.emojimadness;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class EmojiMadnessPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(EmojiMadnessPlugin.class);
		RuneLite.main(args);
	}
}
/*
 * Copyright (c) 2020, dekvall <https://github.com/dekvall>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package dekvall.emojimadness;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("emojimadness")
public interface EmojiMadnessConfig extends Config
{
	@ConfigItem(
		keyName = "appendMode",
		name = "Append Mode",
		description = "Append the icon to the trigger instead of replacing it"
	)
	default boolean appendMode()
	{
		return true;
	}
}

/*
 * Copyright (c) 2019, Lotto <https://github.com/devLotto>
 * Copyright (c) 2020, dekvall <https://github.com/dekvall>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package dekvall.emojimadness;

import com.google.common.base.Joiner;
import com.google.inject.Provides;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.annotation.Nullable;
import javax.inject.Inject;
import joptsimple.internal.Strings;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.GameState;
import net.runelite.api.IndexedSprite;
import net.runelite.api.MessageNode;
import net.runelite.api.Player;
import net.runelite.api.events.ChatMessage;
import net.runelite.api.events.GameStateChanged;
import net.runelite.api.events.OverheadTextChanged;
import net.runelite.client.chat.ChatMessageManager;
import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.ConfigChanged;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.util.ImageUtil;

@Slf4j
@PluginDescriptor(
	name = "Emoji Madness",
	description = "Use emojis instead of words"
)
public class EmojiMadnessPlugin extends Plugin
{
	private static final Pattern TAG_REGEXP = Pattern.compile("<[^>]*>");
	private static final Pattern WHITESPACE_REGEXP = Pattern.compile("[\\s\\u00A0]");

	@Inject
	private Client client;

	@Inject
	private ChatMessageManager chatMessageManager;

	@Inject
	private EmojiMadnessConfig config;

	private int modIconsStart = -1;

	@Provides
	EmojiMadnessConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(EmojiMadnessConfig.class);
	}

	@Override
	protected void startUp()
	{
		loadEmojiIcons();
	}

	@Subscribe
	public void onGameStateChanged(GameStateChanged gameStateChanged)
	{
		if (gameStateChanged.getGameState() == GameState.LOGGED_IN)
		{
			loadEmojiIcons();
		}
	}

	private void loadEmojiIcons()
	{
		final IndexedSprite[] modIcons = client.getModIcons();
		if (modIconsStart != -1 || modIcons == null)
		{
			return;
		}

		final Emoji[] emojis = Emoji.values();
		final IndexedSprite[] newModIcons = Arrays.copyOf(modIcons, modIcons.length + emojis.length);
		modIconsStart = modIcons.length;

		for (int i = 0; i < emojis.length; i++)
		{
			final Emoji emoji = emojis[i];

			try
			{
				final BufferedImage image = emoji.loadImage();
				final IndexedSprite sprite = ImageUtil.getImageIndexedSprite(image, client);
				newModIcons[modIconsStart + i] = sprite;
			}
			catch (Exception ex)
			{
				log.warn("Failed to load the sprite for emoji " + emoji, ex);
			}
		}

		log.debug("Adding emoji icons");
		client.setModIcons(newModIcons);
	}

	@Subscribe
	public void onChatMessage(ChatMessage chatMessage)
	{
		if (client.getGameState() != GameState.LOGGED_IN || modIconsStart == -1)
		{
			return;
		}

		switch (chatMessage.getType())
		{
			case PUBLICCHAT:
			case MODCHAT:
			case FRIENDSCHAT:
			case PRIVATECHAT:
			case PRIVATECHATOUT:
			case MODPRIVATECHAT:
				break;
			default:
				return;
		}

		final MessageNode messageNode = chatMessage.getMessageNode();
		final String message = messageNode.getValue();
		final String updatedMessage = updateMessage(message);

		if (updatedMessage == null)
		{
			return;
		}

		messageNode.setRuneLiteFormatMessage(updatedMessage);
		chatMessageManager.update(messageNode);
		client.refreshChat();
	}

	@Subscribe
	public void onOverheadTextChanged(final OverheadTextChanged event)
	{
		if (!(event.getActor() instanceof Player))
		{
			return;
		}

		final String message = event.getOverheadText();
		final String updatedMessage = updateMessage(message);

		if (updatedMessage == null)
		{
			return;
		}

		event.getActor().setOverheadText(updatedMessage);
	}

	@Nullable
	String updateMessage(final String message)
	{
		final String[] messageWords = WHITESPACE_REGEXP.split(message);
		List<String> newMessageWords = new ArrayList<>();

		boolean editedMessage = false;
		for (int i = 0; i < messageWords.length; i++)
		{
			// Remove tags except for <lt> and <gt>
			final String trigger = removeTags(messageWords[i]);

			List<List<String>> phrases = Emoji.getTriggers(trigger.toLowerCase());
			newMessageWords.add(messageWords[i]);

			if (phrases == null)
			{
				continue;
			}

			List<String> splitTrigger = null;
			middle:
			for (List<String> words : phrases)
			{
				if (i + words.size() > messageWords.length)
				{
					// Longest phrases first
					continue;
				}

				for (int j = 0; j < words.size(); j++)
				{
					if (!words.get(j).equals(messageWords[i+j].toLowerCase()))
					{
						continue middle;
					}
				}

				splitTrigger = words;
				// if we find a match we are done
				break;
			}

			if (splitTrigger == null)
			{
				continue;
			}

			String triggerPhrase = Joiner.on(" ").join(splitTrigger);

			final Emoji emoji = Emoji.getEmoji(triggerPhrase);
			final int emojiId = modIconsStart + emoji.ordinal();

			// The trigger is still in new message words
			newMessageWords.remove(newMessageWords.lastIndexOf(messageWords[i]));
			if (config.appendMode())
			{
				// Append the emoji to the phrase in a bracket
				newMessageWords.addAll(splitTrigger);
				newMessageWords.add("[<img=" + emojiId + ">]");
			}
			else
			{
				// Replace the phrase
				newMessageWords.add("<img=" + emojiId + ">");
			}

			i += splitTrigger.size() - 1;
			editedMessage = true;
		}

		// If we haven't edited the message any, don't update it.
		if (!editedMessage)
		{
			return null;
		}

		return Joiner.on(" ").join(newMessageWords);
	}

	/**
	 * Remove tags, except for &lt;lt&gt; and &lt;gt&gt;
	 *
	 * @return
	 */
	private static String removeTags(String str)
	{
		StringBuffer stringBuffer = new StringBuffer();
		Matcher matcher = TAG_REGEXP.matcher(str);
		while (matcher.find())
		{
			matcher.appendReplacement(stringBuffer, "");
			String match = matcher.group(0);
			switch (match)
			{
				case "<lt>":
				case "<gt>":
					stringBuffer.append(match);
					break;
			}
		}
		matcher.appendTail(stringBuffer);
		return stringBuffer.toString();
	}
}


/*
 * Copyright (c) 2019, Lotto <https://github.com/devLotto>
 * Copyright (c) 2020, dekvall <https://github.com/dekvall>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package dekvall.emojimadness;

import com.google.common.base.Splitter;
import com.google.common.collect.ImmutableListMultimap;
import com.google.common.collect.ImmutableMap;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import lombok.AllArgsConstructor;
import net.runelite.client.util.ImageUtil;

@AllArgsConstructor
enum Emoji
{
	EIGHT_BALL("8ball", "1f3b1"),
	AFGHANISTAN("af flag", "1f1e6-1f1eb"),
	ALBANIA("al flag", "1f1e6-1f1f1"),
	ALGERIA("dz flag", "1f1e9-1f1ff"),
	AMERICAN_SAMOA("as flag", "1f1e6-1f1f8"),
	ANDORRA("ad flag", "1f1e6-1f1e9"),
	ANGOLA("ao flag", "1f1e6-1f1f4"),
	ANGUILLA("ai flag", "1f1e6-1f1ee"),
	ANTARCTICA("aq flag", "1f1e6-1f1f6"),
	ANTIGUA_AND_BARBUDA("ag flag", "1f1e6-1f1ec"),
	ARGENTINA("ar flag", "1f1e6-1f1f7"),
	ARMENIA("am flag", "1f1e6-1f1f2"),
	ARUBA("aw flag", "1f1e6-1f1fc"),
	ASCENSION_ISLAND("ac flag", "1f1e6-1f1e8"),
	AUSTRALIA("au flag", "1f1e6-1f1fa"),
	AUSTRIA("at flag", "1f1e6-1f1f9"),
	AZERBAIJAN("az flag", "1f1e6-1f1ff"),
	BAHAMAS("bs flag", "1f1e7-1f1f8"),
	BAHRAIN("bh flag", "1f1e7-1f1ed"),
	BANGLADESH("bd flag", "1f1e7-1f1e9"),
	BARBADOS("bb flag", "1f1e7-1f1e7"),
	BELARUS("by flag", "1f1e7-1f1fe"),
	BELGIUM("be flag", "1f1e7-1f1ea"),
	BELIZE("bz flag", "1f1e7-1f1ff"),
	BENIN("bj flag", "1f1e7-1f1ef"),
	BERMUDA("bm flag", "1f1e7-1f1f2"),
	BHUTAN("bt flag", "1f1e7-1f1f9"),
	BOLIVIA("bo flag", "1f1e7-1f1f4"),
	BOSNIA_AND_HERZEGOVINA("ba flag", "1f1e7-1f1e6"),
	BOTSWANA("bw flag", "1f1e7-1f1fc"),
	BOUVET_ISLAND("bv flag", "1f1e7-1f1fb"),
	BRAZIL("br flag", "1f1e7-1f1f7"),
	BRITISH_INDIAN_OCEAN_TERRITORY("io flag", "1f1ee-1f1f4"),
	BRITISH_VIRGIN_ISLANDS("vg flag", "1f1fb-1f1ec"),
	BRUNEI("bn flag", "1f1e7-1f1f3"),
	BULGARIA("bg flag", "1f1e7-1f1ec"),
	BURKINA_FASO("bf flag", "1f1e7-1f1eb"),
	BURUNDI("bi flag", "1f1e7-1f1ee"),
	CAMBODIA("kh flag", "1f1f0-1f1ed"),
	CAMEROON("cm flag", "1f1e8-1f1f2"),
	CANADA("ca flag", "1f1e8-1f1e6"),
	CANARY_ISLANDS("ic flag", "1f1ee-1f1e8"),
	CAPE_VERDE("cv flag", "1f1e8-1f1fb"),
	CARIBBEAN_NETHERLANDS("bq flag", "1f1e7-1f1f6"),
	CAYMAN_ISLANDS("ky flag", "1f1f0-1f1fe"),
	CENTRAL_AFRICAN_REPUBLIC("cf flag", "1f1e8-1f1eb"),
	CEUTA_AND_MELILLA("ea flag", "1f1ea-1f1e6"),
	CHAD("td flag", "1f1f9-1f1e9"),
	CHILE("cl flag", "1f1e8-1f1f1"),
	CHINA("cn flag", "1f1e8-1f1f3"),
	CHRISTMAS_ISLAND("cx flag", "1f1e8-1f1fd"),
	CLIPPERTON_ISLAND("cp flag", "1f1e8-1f1f5"),
	COCOS_KEELING_ISLANDS("cc flag", "1f1e8-1f1e8"),
	COLOMBIA("co flag", "1f1e8-1f1f4"),
	COMOROS("km flag", "1f1f0-1f1f2"),
	CONGO__BRAZZAVILLE("cg flag", "1f1e8-1f1ec"),
	CONGO__KINSHASA("cd flag", "1f1e8-1f1e9"),
	COOK_ISLANDS("ck flag", "1f1e8-1f1f0"),
	COSTA_RICA("cr flag", "1f1e8-1f1f7"),
	CROATIA("hr flag", "1f1ed-1f1f7"),
	CUBA("cu flag", "1f1e8-1f1fa"),
	CURAÇAO("cw flag", "1f1e8-1f1fc"),
	CYPRUS("cy flag", "1f1e8-1f1fe"),
	CZECH_REPUBLIC("cz flag", "1f1e8-1f1ff"),
	CÔTE_DIVOIRE("ci flag", "1f1e8-1f1ee"),
	DENMARK("dk flag", "1f1e9-1f1f0"),
	DIEGO_GARCIA("dg flag", "1f1e9-1f1ec"),
	DJIBOUTI("dj flag", "1f1e9-1f1ef"),
	DOMINICA("dm flag", "1f1e9-1f1f2"),
	DOMINICAN_REPUBLIC("do flag", "1f1e9-1f1f4"),
	ECUADOR("ec flag", "1f1ea-1f1e8"),
	EGYPT("eg flag", "1f1ea-1f1ec"),
	EL_SALVADOR("sv flag", "1f1f8-1f1fb"),
	EQUATORIAL_GUINEA("gq flag", "1f1ec-1f1f6"),
	ERITREA("er flag", "1f1ea-1f1f7"),
	ESTONIA("ee flag", "1f1ea-1f1ea"),
	ETHIOPIA("et flag", "1f1ea-1f1f9"),
	EUROPEAN_UNION("eu flag", "1f1ea-1f1fa"),
	FALKLAND_ISLANDS("fk flag", "1f1eb-1f1f0"),
	FAROE_ISLANDS("fo flag", "1f1eb-1f1f4"),
	FIJI("fj flag", "1f1eb-1f1ef"),
	FINLAND("fi flag", "1f1eb-1f1ee"),
	FRANCE("fr flag", "1f1eb-1f1f7"),
	FRENCH_GUIANA("gf flag", "1f1ec-1f1eb"),
	FRENCH_POLYNESIA("pf flag", "1f1f5-1f1eb"),
	FRENCH_SOUTHERN_TERRITORIES("tf flag", "1f1f9-1f1eb"),
	GABON("ga flag", "1f1ec-1f1e6"),
	GAMBIA("gm flag", "1f1ec-1f1f2"),
	GEORGIA("ge flag", "1f1ec-1f1ea"),
	GERMANY("de flag", "1f1e9-1f1ea"),
	GHANA("gh flag", "1f1ec-1f1ed"),
	GIBRALTAR("gi flag", "1f1ec-1f1ee"),
	GREECE("gr flag", "1f1ec-1f1f7"),
	GREENLAND("gl flag", "1f1ec-1f1f1"),
	GRENADA("gd flag", "1f1ec-1f1e9"),
	GUADELOUPE("gp flag", "1f1ec-1f1f5"),
	GUAM("gu flag", "1f1ec-1f1fa"),
	GUATEMALA("gt flag", "1f1ec-1f1f9"),
	GUERNSEY("gg flag", "1f1ec-1f1ec"),
	GUINEA("gn flag", "1f1ec-1f1f3"),
	GUINEABISSAU("gw flag", "1f1ec-1f1fc"),
	GUYANA("gy flag", "1f1ec-1f1fe"),
	HAITI("ht flag", "1f1ed-1f1f9"),
	HEARD_AND_MCDONALD_ISLANDS("hm flag", "1f1ed-1f1f2"),
	HONDURAS("hn flag", "1f1ed-1f1f3"),
	HONG_KONG_SAR_CHINA("hk flag", "1f1ed-1f1f0"),
	HUNGARY("hu flag", "1f1ed-1f1fa"),
	ICELAND("is flag", "1f1ee-1f1f8"),
	INDIA("in flag", "1f1ee-1f1f3"),
	INDONESIA("id flag", "1f1ee-1f1e9"),
	IRAN("ir flag", "1f1ee-1f1f7"),
	IRAQ("iq flag", "1f1ee-1f1f6"),
	IRELAND("ie flag", "1f1ee-1f1ea"),
	ISLE_OF_MAN("im flag", "1f1ee-1f1f2"),
	ISRAEL("il flag", "1f1ee-1f1f1"),
	ITALY("it flag", "1f1ee-1f1f9"),
	JAMAICA("jm flag", "1f1ef-1f1f2"),
	JAPAN_FLAG("jp flag", "1f1ef-1f1f5"),
	JERSEY("je flag", "1f1ef-1f1ea"),
	JORDAN("jo flag", "1f1ef-1f1f4"),
	KAZAKHSTAN("kz flag", "1f1f0-1f1ff"),
	KENYA("ke flag", "1f1f0-1f1ea"),
	KIRIBATI("ki flag", "1f1f0-1f1ee"),
	KOSOVO("xk flag", "1f1fd-1f1f0"),
	KUWAIT("kw flag", "1f1f0-1f1fc"),
	KYRGYZSTAN("kg flag", "1f1f0-1f1ec"),
	LAOS("la flag", "1f1f1-1f1e6"),
	LATVIA("lv flag", "1f1f1-1f1fb"),
	LEBANON("lb flag", "1f1f1-1f1e7"),
	LESOTHO("ls flag", "1f1f1-1f1f8"),
	LIBERIA("lr flag", "1f1f1-1f1f7"),
	LIBYA("ly flag", "1f1f1-1f1fe"),
	LIECHTENSTEIN("li flag", "1f1f1-1f1ee"),
	LITHUANIA("lt flag", "1f1f1-1f1f9"),
	LUXEMBOURG("lu flag", "1f1f1-1f1fa"),
	MACAU_SAR_CHINA("mo flag", "1f1f2-1f1f4"),
	MACEDONIA("mk flag", "1f1f2-1f1f0"),
	MADAGASCAR("mg flag", "1f1f2-1f1ec"),
	MALAWI("mw flag", "1f1f2-1f1fc"),
	MALAYSIA("my flag", "1f1f2-1f1fe"),
	MALDIVES("mv flag", "1f1f2-1f1fb"),
	MALI("ml flag", "1f1f2-1f1f1"),
	MALTA("mt flag", "1f1f2-1f1f9"),
	MAN_IN_SUIT_LEVITATING("man in suit", "1f574"),
	MARSHALL_ISLANDS("mh flag", "1f1f2-1f1ed"),
	MARTINIQUE("mq flag", "1f1f2-1f1f6"),
	MAURITANIA("mr flag", "1f1f2-1f1f7"),
	MAURITIUS("mu flag", "1f1f2-1f1fa"),
	MAYOTTE("yt flag", "1f1fe-1f1f9"),
	MEXICO("mx flag", "1f1f2-1f1fd"),
	MICRONESIA("fm flag", "1f1eb-1f1f2"),
	MOLDOVA("md flag", "1f1f2-1f1e9"),
	MONACO("mc flag", "1f1f2-1f1e8"),
	MONGOLIA("mn flag", "1f1f2-1f1f3"),
	MONTENEGRO("me flag", "1f1f2-1f1ea"),
	MONTSERRAT("ms flag", "1f1f2-1f1f8"),
	MOROCCO("ma flag", "1f1f2-1f1e6"),
	MOZAMBIQUE("mz flag", "1f1f2-1f1ff"),
	MYANMAR_BURMA("mm flag", "1f1f2-1f1f2"),
	NAMIBIA("na flag", "1f1f3-1f1e6"),
	NAURU("nr flag", "1f1f3-1f1f7"),
	NEPAL("np flag", "1f1f3-1f1f5"),
	NETHERLANDS("nl flag", "1f1f3-1f1f1"),
	NEW_CALEDONIA("nc flag", "1f1f3-1f1e8"),
	NEW_ZEALAND("nz flag", "1f1f3-1f1ff"),
	NICARAGUA("ni flag", "1f1f3-1f1ee"),
	NIGER("ne flag", "1f1f3-1f1ea"),
	NIGERIA("ng flag", "1f1f3-1f1ec"),
	NIUE("nu flag", "1f1f3-1f1fa"),
	NORFOLK_ISLAND("nf flag", "1f1f3-1f1eb"),
	NORTH_KOREA("kp flag", "1f1f0-1f1f5"),
	NORTHERN_MARIANA_ISLANDS("mp flag", "1f1f2-1f1f5"),
	NORWAY("no flag", "1f1f3-1f1f4"),
	OMAN("om flag", "1f1f4-1f1f2"),
	PAKISTAN("pk flag", "1f1f5-1f1f0"),
	PALAU("pw flag", "1f1f5-1f1fc"),
	PALESTINIAN_TERRITORIES("ps flag", "1f1f5-1f1f8"),
	PANAMA("pa flag", "1f1f5-1f1e6"),
	PAPUA_NEW_GUINEA("pg flag", "1f1f5-1f1ec"),
	PARAGUAY("py flag", "1f1f5-1f1fe"),
	PERU("pe flag", "1f1f5-1f1ea"),
	PHILIPPINES("ph flag", "1f1f5-1f1ed"),
	PILE_OF_POO("poop", "1f4a9"),
	PITCAIRN_ISLANDS("pn flag", "1f1f5-1f1f3"),
	POLAND("pl flag", "1f1f5-1f1f1"),
	PORTUGAL("pt flag", "1f1f5-1f1f9"),
	PUERTO_RICO("pr flag", "1f1f5-1f1f7"),
	QATAR("qa flag", "1f1f6-1f1e6"),
	ROMANIA("ro flag", "1f1f7-1f1f4"),
	RUSSIA("ru flag", "1f1f7-1f1fa"),
	RWANDA("rw flag", "1f1f7-1f1fc"),
	RÉUNION("re flag", "1f1f7-1f1ea"),
	SAMOA("ws flag", "1f1fc-1f1f8"),
	SAN_MARINO("sm flag", "1f1f8-1f1f2"),
	SAUDI_ARABIA("sa flag", "1f1f8-1f1e6"),
	SENEGAL("sn flag", "1f1f8-1f1f3"),
	SERBIA("rs flag", "1f1f7-1f1f8"),
	SEYCHELLES("sc flag", "1f1f8-1f1e8"),
	SIERRA_LEONE("sl flag", "1f1f8-1f1f1"),
	SINGAPORE("sg flag", "1f1f8-1f1ec"),
	SINT_MAARTEN("sx flag", "1f1f8-1f1fd"),
	SLOVAKIA("sk flag", "1f1f8-1f1f0"),
	SLOVENIA("si flag", "1f1f8-1f1ee"),
	SOLOMON_ISLANDS("sb flag", "1f1f8-1f1e7"),
	SOMALIA("so flag", "1f1f8-1f1f4"),
	SOUTH_AFRICA("za flag", "1f1ff-1f1e6"),
	SOUTH_GEORGIA_AND_SOUTH_SANDWICH_ISLANDS("gs flag", "1f1ec-1f1f8"),
	SOUTH_KOREA("kr flag", "1f1f0-1f1f7"),
	SOUTH_SUDAN("ss flag", "1f1f8-1f1f8"),
	SPAIN("es flag", "1f1ea-1f1f8"),
	SRI_LANKA("lk flag", "1f1f1-1f1f0"),
	ST_BARTHÉLEMY("bl flag", "1f1e7-1f1f1"),
	ST_HELENA("sh flag", "1f1f8-1f1ed"),
	ST_KITTS_AND_NEVIS("kn flag", "1f1f0-1f1f3"),
	ST_LUCIA("lc flag", "1f1f1-1f1e8"),
	ST_MARTIN("mf flag", "1f1f2-1f1eb"),
	ST_PIERRE_AND_MIQUELON("pm flag", "1f1f5-1f1f2"),
	ST_VINCENT_AND_GRENADINES("vc flag", "1f1fb-1f1e8"),
	SUDAN("sd flag", "1f1f8-1f1e9"),
	SURINAME("sr flag", "1f1f8-1f1f7"),
	SVALBARD_AND_JAN_MAYEN("sj flag", "1f1f8-1f1ef"),
	SWAZILAND("sz flag", "1f1f8-1f1ff"),
	SWEDEN("se flag", "1f1f8-1f1ea"),
	SWITZERLAND("ch flag", "1f1e8-1f1ed"),
	SYRIA("sy flag", "1f1f8-1f1fe"),
	SÃO_TOMÉ_AND_PRÍ­NCIPE("st flag", "1f1f8-1f1f9"),
	TAIWAN("tw flag", "1f1f9-1f1fc"),
	TAJIKISTAN("tj flag", "1f1f9-1f1ef"),
	TANZANIA("tz flag", "1f1f9-1f1ff"),
	THAILAND("th flag", "1f1f9-1f1ed"),
	TIMORLESTE("tl flag", "1f1f9-1f1f1"),
	TOGO("tg flag", "1f1f9-1f1ec"),
	TOKELAU("tk flag", "1f1f9-1f1f0"),
	TONGA("to flag", "1f1f9-1f1f4"),
	TRINIDAD_AND_TOBAGO("tt flag", "1f1f9-1f1f9"),
	TRISTAN_DA_CUNHA("ta flag", "1f1f9-1f1e6"),
	TUNISIA("tn flag", "1f1f9-1f1f3"),
	TURKEY_FLAG("tr flag", "1f1f9-1f1f7"),
	TURKMENISTAN("tm flag", "1f1f9-1f1f2"),
	TURKS_AND_CAICOS_ISLANDS("tc flag", "1f1f9-1f1e8"),
	TUVALU("tv flag", "1f1f9-1f1fb"),
	US_OUTLYING_ISLANDS("um flag", "1f1fa-1f1f2"),
	US_VIRGIN_ISLANDS("vi flag", "1f1fb-1f1ee"),
	UGANDA("ug flag", "1f1fa-1f1ec"),
	UKRAINE("ua flag", "1f1fa-1f1e6"),
	UNITED_ARAB_EMIRATES("ae flag", "1f1e6-1f1ea"),
	UNITED_KINGDOM("gb flag", "1f1ec-1f1e7"),
	UNITED_STATES("us flag", "1f1fa-1f1f8"),
	UNITED_STATES_OF_AMERICA("us", "1f1fa"),
	URUGUAY("uy flag", "1f1fa-1f1fe"),
	UZBEKISTAN("uz flag", "1f1fa-1f1ff"),
	VANUATU("vu flag", "1f1fb-1f1fa"),
	VATICAN_CITY("va flag", "1f1fb-1f1e6"),
	VENEZUELA("ve flag", "1f1fb-1f1ea"),
	VIETNAM("vn flag", "1f1fb-1f1f3"),
	WALLIS_AND_FUTUNA("wf flag", "1f1fc-1f1eb"),
	WESTERN_SAHARA("eh flag", "1f1ea-1f1ed"),
	YEMEN("ye flag", "1f1fe-1f1ea"),
	ZAMBIA("zm flag", "1f1ff-1f1f2"),
	ZIMBABWE("zw flag", "1f1ff-1f1fc"),
	A("a", "1f170"),
	AB("ab", "1f18e"),
	ABC("abc", "1f524"),
	ABCD("abcd", "1f521"),
	ACCEPT("accept", "1f251"),
	AERIAL_TRAMWAY("aerial tramway", "1f6a1"),
	AIRPLANE("airplane", "2708"),
	AIRPLANE_ARRIVING("airplane arriving", "1f6ec"),
	AIRPLANE_DEPARTURE("airplane departure", "1f6eb"),
	ALEMBIC("alembic", "2697"),
	ALIEN("alien", "1f47d"),
	AMBULANCE("ambulance", "1f691"),
	AMPHORA("amphora", "1f3fa"),
	ANCHOR("anchor", "2693"),
	ANGEL("angel", "1f47c"),
	ANGER("anger", "1f4a2"),
	ANGER_RIGHT("anger right", "1f5ef"),
	ANGRY("angry", "1f620"),
	ANGUISHED("anguished", "1f627"),
	ANT("ant", "1f41c"),
	APPLE("apple", "1f34e"),
	AQUARIUS("aquarius", "2652"),
	ARIES("aries", "2648"),
	ARROW_BACKWARD("arrow backward", "25c0"),
	ARROW_DOUBLE_DOWN("arrow double down", "23ec"),
	ARROW_DOUBLE_UP("arrow double up", "23eb"),
	ARROW_DOWN("arrow down", "2b07"),
	ARROW_DOWN_SMALL("arrow down small", "1f53d"),
	ARROW_FORWARD("arrow forward", "25b6"),
	ARROW_HEADING_DOWN("arrow heading down", "2935"),
	ARROW_HEADING_UP("arrow heading up", "2934"),
	ARROW_LEFT("arrow left", "2b05"),
	ARROW_LOWER_LEFT("arrow lower left", "2199"),
	ARROW_LOWER_RIGHT("arrow lower right", "2198"),
	ARROW_RIGHT("arrow right", "27a1"),
	ARROW_RIGHT_HOOK("arrow right hook", "21aa"),
	ARROW_UP("arrow up", "2b06"),
	ARROW_UP_DOWN("arrow up down", "2195"),
	ARROW_UP_SMALL("arrow up small", "1f53c"),
	ARROW_UPPER_LEFT("arrow upper left", "2196"),
	ARROW_UPPER_RIGHT("arrow upper right", "2197"),
	ARTICULATED_LORRY("articulated lorry", "1f69b"),
	ASTERISK("asterisk", "002a-20e3"),
	ASTONISHED("astonished", "1f632"),
	ATHLETIC_SHOE("athletic shoe", "1f45f"),
	ATM("atm", "1f3e7"),
	ATOM("atom", "269b"),
	B("b", "1f171"),
	BABY("baby", "1f476"),
	BABY_BOTTLE("baby bottle", "1f37c"),
	BABY_CHICK("baby chick", "1f424"),
	BABY_SYMBOL("baby symbol", "1f6bc"),
	BACK("back", "1f519"),
	BAGGAGE_CLAIM("baggage claim", "1f6c4"),
	BALLOON("balloon", "1f388"),
	BALLOT_BOX("ballot box", "1f5f3"),
	BALLOT_BOX_WITH_CHECK("ballot box with check", "2611"),
	BAMBOO("bamboo", "1f38d"),
	BANANA("banana", "1f34c"),
	BANGBANG("bangbang", "203c"),
	BANK("bank", "1f3e6"),
	BAR_CHART("bar chart", "1f4ca"),
	BARBER("barber", "1f488"),
	BASEBALL("baseball", "26be"),
	BASKETBALL("basketball", "1f3c0"),
	BATH("bath", "1f6c0"),
	BATHTUB("bathtub", "1f6c1"),
	BATTERY("battery", "1f50b"),
	BEACH_UMBRELLA("beach umbrella", "26f1"),
	BEAR("bear", "1f43b"),
	BED("bed", "1f6cf"),
	BEE("bee", "1f41d"),
	BEER("beer", "1f37a"),
	BEERS("beers", "1f37b"),
	BEETLE("beetle", "1f41e"),
	BEGINNER("beginner", "1f530"),
	BELL("bell", "1f514"),
	BENTO("bento", "1f371"),
	BICYCLIST("bicyclist", "1f6b4"),
	BIKE("bike", "1f6b2"),
	BIKINI("bikini", "1f459"),
	BIOHAZARD("biohazard", "2623"),
	BIRD("bird", "1f426"),
	BIRTHDAY("birthday", "1f382"),
	BLACK_HEART("black heart", "1f5a4"),
	BLACK_JOKER("black joker", "1f0cf"),
	BLACK_NIB("black nib", "2712"),
	BLOSSOM("blossom", "1f33c"),
	BLOWFISH("blowfish", "1f421"),
	BLUE_BOOK("blue book", "1f4d8"),
	BLUE_CAR("blue car", "1f699"),
	BLUE_HEART("blue heart", "1f499"),
	BLUSH("blush", "1f60a"),
	BOAR("boar", "1f417"),
	BOMB("bomb", "1f4a3"),
	BOOK("book", "1f4d6"),
	BOOKMARK("bookmark", "1f516"),
	BOOKMARK_TABS("bookmark tabs", "1f4d1"),
	BOOKS("books", "1f4da"),
	BOOM("boom", "1f4a5"),
	BOOT("boot", "1f462"),
	BOUQUET("bouquet", "1f490"),
	BOW("bow", "1f647"),
	BOW_AND_ARROW("bow and arrow", "1f3f9"),
	BOWLING("bowling", "1f3b3"),
	BOY("boy", "1f466"),
	BREAD("bread", "1f35e"),
	BRIDE_WITH_VEIL("bride with veil", "1f470"),
	BRIDGE_AT_NIGHT("bridge at night", "1f309"),
	BRIEFCASE("briefcase", "1f4bc"),
	BROKEN_HEART("broken heart", "1f494"),
	BUG("bug", "1f41b"),
	BULB("bulb", "1f4a1"),
	BULLETTRAIN_FRONT("bullettrain front", "1f685"),
	BULLETTRAIN_SIDE("bullettrain side", "1f684"),
	BURRITO("burrito", "1f32f"),
	BUS("bus", "1f68c"),
	BUSSTOP("busstop", "1f68f"),
	BUSTS_IN_SILHOUETTE("busts in silhouette", "1f465"),
	CACTUS("cactus", "1f335"),
	CAKE("cake", "1f370"),
	CALENDAR("calendar", "1f4c6"),
	CALLING("calling", "1f4f2"),
	CAMEL("camel", "1f42b"),
	CAMERA("camera", "1f4f7"),
	CAMERA_WITH_FLASH("camera with flash", "1f4f8"),
	CAMPING("camping", "1f3d5"),
	CANCER("cancer", "264b"),
	CANDLE("candle", "1f56f"),
	CANDY("candy", "1f36c"),
	CAPITAL_ABCD("capital abcd", "1f520"),
	CAPRICORN("capricorn", "2651"),
	CARD_INDEX("card index", "1f4c7"),
	CAROUSEL_HORSE("carousel horse", "1f3a0"),
	CAT("cat", "1f431"),
	CD("cd", "1f4bf"),
	CHAINS("chains", "26d3"),
	CHAMPAGNE("champagne", "1f37e"),
	CHART("chart", "1f4b9"),
	CHART_WITH_DOWNWARDS_TREND("chart with downwards trend", "1f4c9"),
	CHART_WITH_UPWARDS_TREND("chart with upwards trend", "1f4c8"),
	CHECKERED_FLAG("checkered flag", "1f3c1"),
	CHERRIES("cherries", "1f352"),
	CHERRY_BLOSSOM("cherry blossom", "1f338"),
	CHICKEN("chicken", "1f414"),
	CHILDREN_CROSSING("children crossing", "1f6b8"),
	CHIPMUNK("chipmunk", "1f43f"),
	CHOCOLATE_BAR("chocolate bar", "1f36b"),
	CHRISTMAS_TREE("christmas tree", "1f384"),
	CHURCH("church", "26ea"),
	CINEMA("cinema", "1f3a6"),
	CIRCUS_TENT("circus tent", "1f3aa"),
	CITY_SUNSET("city sunset", "1f307"),
	CITYSCAPE("cityscape", "1f3d9"),
	CL("cl", "1f191"),
	CLAP("clap", "1f44f"),
	CLAPPER("clapper", "1f3ac"),
	CLASSICAL_BUILDING("classical building", "1f3db"),
	CLIPBOARD("clipboard", "1f4cb"),
	CLOSED_BOOK("closed book", "1f4d5"),
	CLOSED_LOCK_WITH_KEY("closed lock with key", "1f510"),
	CLOSED_UMBRELLA("closed umbrella", "1f302"),
	CLOUD("cloud", "2601"),
	CLUBS("clubs", "2663"),
	COCKTAIL("cocktail", "1f378"),
	COFFEE("coffee", "2615"),
	COFFIN("coffin", "26b0"),
	COLD_SWEAT("cold sweat", "1f630"),
	COMET("comet", "2604"),
	COMPRESSION("compression", "1f5dc"),
	COMPUTER("computer", "1f4bb"),
	CONFETTI_BALL("confetti ball", "1f38a"),
	CONFOUNDED("confounded", "1f616"),
	CONFUSED("confused", "1f615"),
	CONGRATULATIONS("congratulations", "3297"),
	CONSTRUCTION("construction", "1f6a7"),
	CONSTRUCTION_WORKER("construction worker", "1f477"),
	CONTROL_KNOBS("control knobs", "1f39b"),
	CONVENIENCE_STORE("convenience store", "1f3ea"),
	COOKIE("cookie", "1f36a"),
	COOL("cool", "1f192"),
	COP("cop", "1f46e"),
	COPYRIGHT("copyright", "00a9"),
	CORN("corn", "1f33d"),
	COUPLE("couple", "1f46b"),
	COUPLE_WITH_HEART("couple with heart", "1f491"),
	COUPLEKISS("couplekiss", "1f48f"),
	COW("cow", "1f42e"),
	CRAB("crab", "1f980"),
	CREDIT_CARD("credit card", "1f4b3"),
	CRESCENT_MOON("crescent moon", "1f319"),
	CROCODILE("crocodile", "1f40a"),
	CROSS("cross", "271d"),
	CROSSED_FLAGS("crossed flags", "1f38c"),
	CROSSED_SWORDS("crossed swords", "2694"),
	CROWN("crown", "1f451"),
	CRY("cry", "1f622"),
	CRYING_CAT_FACE("crying cat face", "1f63f"),
	CRYSTAL_BALL("crystal ball", "1f52e"),
	CUPID("cupid", "1f498"),
	CURLY_LOOP("curly loop", "27b0"),
	CURRENCY_EXCHANGE("currency exchange", "1f4b1"),
	CURRY("curry", "1f35b"),
	CUSTARD("custard", "1f36e"),
	CUSTOMS("customs", "1f6c3"),
	CYCLONE("cyclone", "1f300"),
	DANCER("dancer", "1f483"),
	DANCERS("dancers", "1f46f"),
	DANGO("dango", "1f361"),
	DARK_SUNGLASSES("dark sunglasses", "1f576"),
	DART("dart", "1f3af"),
	DASH("dash", "1f4a8"),
	DATE("date", "1f4c5"),
	DECIDUOUS_TREE("deciduous tree", "1f333"),
	DEPARTMENT_STORE("department store", "1f3ec"),
	DESERT("desert", "1f3dc"),
	DISAPPOINTED("disappointed", "1f61e"),
	DISAPPOINTED_RELIEVED("disappointed relieved", "1f625"),
	DIZZY("dizzy", "1f4ab"),
	DIZZY_FACE("dizzy face", "1f635"),
	DO_NOT_LITTER("do not litter", "1f6af"),
	DOG("dog", "1f436"),
	DOLLAR("dollar", "1f4b5"),
	DOLLS("dolls", "1f38e"),
	DOLPHIN("dolphin", "1f42c"),
	DOOR("door", "1f6aa"),
	DOUGHNUT("doughnut", "1f369"),
	DRAGON("dragon", "1f409"),
	DRAGON_FACE("dragon face", "1f432"),
	DRESS("dress", "1f457"),
	DROMEDARY_CAMEL("dromedary camel", "1f42a"),
	DROPLET("droplet", "1f4a7"),
	DRUM("drum", "1f941"),
	DVD("dvd", "1f4c0"),
	EMAIL("e-mail", "1f4e7"),
	EAR("ear", "1f442"),
	EAR_OF_RICE("ear of rice", "1f33e"),
	EARTH_AFRICA("earth africa", "1f30d"),
	EARTH_AMERICAS("earth americas", "1f30e"),
	EARTH_ASIA("earth asia", "1f30f"),
	EGG("egg", "1f95a"),
	EGGPLANT("eggplant", "1f346"),
	EIGHT("eight", "0038-20e3"),
	EIGHT_POINTED_BLACK_STAR("eight pointed black star", "2734"),
	EIGHT_SPOKED_ASTERISK("eight spoked asterisk", "2733"),
	ELECTRIC_PLUG("electric plug", "1f50c"),
	ELEPHANT("elephant", "1f418"),
	END("end", "1f51a"),
	ENVELOPE_WITH_ARROW("envelope with arrow", "1f4e9"),
	EURO("euro", "1f4b6"),
	EUROPEAN_CASTLE("european castle", "1f3f0"),
	EUROPEAN_POST_OFFICE("european post office", "1f3e4"),
	EVERGREEN_TREE("evergreen tree", "1f332"),
	EXCLAMATION("exclamation", "2757"),
	EXPRESSIONLESS("expressionless", "1f611"),
	EYE("eye", "1f441"),
	EYEGLASSES("eyeglasses", "1f453"),
	EYES("eyes", "1f440"),
	FACE_WITH_ROLLING_EYES("rolling eyes", "1f644"),
	FACTORY("factory", "1f3ed"),
	FALLEN_LEAF("fallen leaf", "1f342"),
	FAMILY("family", "1f46a"),
	FAX("fax", "1f4e0"),
	FEARFUL("fearful", "1f628"),
	FEET("feet", "1f43e"),
	FERRIS_WHEEL("ferris wheel", "1f3a1"),
	FERRY("ferry", "26f4"),
	FILE_CABINET("file cabinet", "1f5c4"),
	FILE_FOLDER("file folder", "1f4c1"),
	FILM_FRAMES("film frames", "1f39e"),
	FIRE("fire", "1f525"),
	FIRE_ENGINE("fire engine", "1f692"),
	FIREWORKS("fireworks", "1f386"),
	FIRST_QUARTER_MOON("first quarter moon", "1f313"),
	FIRST_QUARTER_MOON_WITH_FACE("first quarter moon with face", "1f31b"),
	FISH("fish", "1f41f"),
	FISH_CAKE("fish cake", "1f365"),
	FISHING_POLE_AND_FISH("fishing pole and fish", "1f3a3"),
	FIST("fist", "270a"),
	FIVE("five", "0035-20e3"),
	FLAGS("flags", "1f38f"),
	FLASHLIGHT("flashlight", "1f526"),
	FLEURDELIS("fleur-de-lis", "269c"),
	FLOPPY_DISK("floppy disk", "1f4be"),
	FLOWER_PLAYING_CARDS("flower playing cards", "1f3b4"),
	FLUSHED("flushed", "1f633"),
	FOG("fog", "1f32b"),
	FOGGY("foggy", "1f301"),
	FOOTBALL("football", "1f3c8"),
	FOOTPRINTS("footprints", "1f463"),
	FORK_AND_KNIFE("fork and knife", "1f374"),
	FOUNTAIN("fountain", "26f2"),
	FOUR("four", "0034-20e3"),
	FOUR_LEAF_CLOVER("four leaf clover", "1f340"),
	FREE("free", "1f193"),
	FRIED_SHRIMP("fried shrimp", "1f364"),
	FRIES("fries", "1f35f"),
	FROG("frog", "1f438"),
	FROWNING("frowning", "1f626"),
	FUELPUMP("fuelpump", "26fd"),
	FULL_MOON("full moon", "1f315"),
	FULL_MOON_WITH_FACE("full moon with face", "1f31d"),
	GAME_DIE("game die", "1f3b2"),
	GEAR("gear", "2699"),
	GEM("gem", "1f48e"),
	GEMINI("gemini", "264a"),
	GHOST("ghost", "1f47b"),
	GIFT("gift", "1f381"),
	GIFT_HEART("gift heart", "1f49d"),
	GIRL("girl", "1f467"),
	GLOBE_WITH_MERIDIANS("globe with meridians", "1f310"),
	GOAT("goat", "1f410"),
	GOLF("golf", "26f3"),
	GOLFER("golfer", "1f3cc"),
	GRAPES("grapes", "1f347"),
	GREEN_APPLE("green apple", "1f34f"),
	GREEN_BOOK("green book", "1f4d7"),
	GREEN_HEART("green heart", "1f49a"),
	GREY_EXCLAMATION("grey exclamation", "2755"),
	GREY_QUESTION("grey question", "2754"),
	GRIMACING("grimacing", "1f62c"),
	GRIN("grin", "1f601"),
	GRINNING("grinning", "1f600"),
	GUARDSMAN("guardsman", "1f482"),
	GUITAR("guitar", "1f3b8"),
	GUN("gun", "1f52b"),
	HAIRCUT("haircut", "1f487"),
	HAMBURGER("hamburger", "1f354"),
	HAMMER("hammer", "1f528"),
	HAMSTER("hamster", "1f439"),
	HANDBAG("handbag", "1f45c"),
	HASH("hash", "0023-20e3"),
	HATCHED_CHICK("hatched chick", "1f425"),
	HATCHING_CHICK("hatching chick", "1f423"),
	HEADPHONES("headphones", "1f3a7"),
	HEAR_NO_EVIL("hear no evil", "1f649"),
	HEART("heart", "2764"),
	HEART_DECORATION("heart decoration", "1f49f"),
	HEART_EXCLAMATION("heart exclamation", "2763"),
	HEART_EYES("heart eyes", "1f60d"),
	HEART_EYES_CAT("heart eyes cat", "1f63b"),
	HEARTBEAT("heartbeat", "1f493"),
	HEARTPULSE("heartpulse", "1f497"),
	HEARTS("hearts", "2665"),
	HEAVY_CHECK_MARK("heavy check mark", "2714"),
	HEAVY_DIVISION_SIGN("heavy division sign", "2797"),
	HEAVY_DOLLAR_SIGN("heavy dollar sign", "1f4b2"),
	HEAVY_MINUS_SIGN("heavy minus sign", "2796"),
	HEAVY_MULTIPLICATION_X("heavy multiplication x", "2716"),
	HEAVY_PLUS_SIGN("heavy plus sign", "2795"),
	HELICOPTER("helicopter", "1f681"),
	HERB("herb", "1f33f"),
	HIBISCUS("hibiscus", "1f33a"),
	HIGH_BRIGHTNESS("high brightness", "1f506"),
	HIGH_HEEL("high heel", "1f460"),
	HOLE("hole", "1f573"),
	HONEY_POT("honey pot", "1f36f"),
	HORSE("horse", "1f434"),
	HORSE_RACING("horse racing", "1f3c7"),
	HOSPITAL("hospital", "1f3e5"),
	HOT_PEPPER("hot pepper", "1f336"),
	HOTDOG("hotdog", "1f32d"),
	HOTEL("hotel", "1f3e8"),
	HOTSPRINGS("hotsprings", "2668"),
	HOURGLASS("hourglass", "231b"),
	HOURGLASS_FLOWING_SAND("hourglass flowing sand", "23f3"),
	HOUSE("house", "1f3e0"),
	HOUSE_WITH_GARDEN("house with garden", "1f3e1"),
	HUGGING_FACE("hugging", "1f917"),
	HUSHED("hushed", "1f62f"),
	ICE_CREAM("ice cream", "1f368"),
	ICE_SKATE("ice skate", "26f8"),
	ICECREAM("icecream", "1f366"),
	ID("id", "1f194"),
	IDEOGRAPH_ADVANTAGE("ideograph advantage", "1f250"),
	IMP("imp", "1f47f"),
	INBOX_TRAY("inbox tray", "1f4e5"),
	INCOMING_ENVELOPE("incoming envelope", "1f4e8"),
	INFORMATION_DESK_PERSON("information desk person", "1f481"),
	INFORMATION_SOURCE("information source", "2139"),
	INNOCENT("innocent", "1f607"),
	INTERROBANG("interrobang", "2049"),
	IPHONE("iphone", "1f4f1"),
	IZAKAYA_LANTERN("izakaya lantern", "1f3ee"),
	JACK_O_LANTERN("jack o lantern", "1f383"),
	JAPAN("japan", "1f5fe"),
	JAPANESE_CASTLE("japanese castle", "1f3ef"),
	JAPANESE_GOBLIN("japanese goblin", "1f47a"),
	JAPANESE_OGRE("japanese ogre", "1f479"),
	JEANS("jeans", "1f456"),
	JOY("joy", "1f602"),
	JOY_CAT("joy cat", "1f639"),
	JOYSTICK("joystick", "1f579"),
	KAABA("kaaba", "1f54b"),
	KEY("key", "1f511"),
	KEYBOARD("keyboard", "2328"),
	KEYCAP_TEN("keycap ten", "1f51f"),
	KIMONO("kimono", "1f458"),
	KISS("kiss", "1f48b"),
	KISSING("kissing", "1f617"),
	KISSING_CAT("kissing cat", "1f63d"),
	KISSING_CLOSED_EYES("kissing closed eyes", "1f61a"),
	KISSING_HEART("kissing heart", "1f618"),
	KISSING_SMILING_EYES("kissing smiling eyes", "1f619"),
	KOALA("koala", "1f428"),
	KOKO("koko", "1f201"),
	LABEL("label", "1f3f7"),
	LAST_QUARTER_MOON("last quarter moon", "1f317"),
	LAST_QUARTER_MOON_WITH_FACE("last quarter moon with face", "1f31c"),
	LAUGHING("laughing", "1f606"),
	LEAVES("leaves", "1f343"),
	LEDGER("ledger", "1f4d2"),
	LEFT_LUGGAGE("left luggage", "1f6c5"),
	LEFT_RIGHT_ARROW("left right arrow", "2194"),
	LEFTWARDS_ARROW_WITH_HOOK("leftwards arrow with hook", "21a9"),
	LEMON("lemon", "1f34b"),
	LEO("leo", "264c"),
	LEOPARD("leopard", "1f406"),
	LEVEL_SLIDER("level slider", "1f39a"),
	LIBRA("libra", "264e"),
	LIGHT_RAIL("light rail", "1f688"),
	LINK("link", "1f517"),
	LION_FACE("lion face", "1f981"),
	LIPS("lips", "1f444"),
	LIPSTICK("lipstick", "1f484"),
	LOCK("lock", "1f512"),
	LOCK_WITH_INK_PEN("lock with ink pen", "1f50f"),
	LOLLIPOP("lollipop", "1f36d"),
	LOOP("loop", "27bf"),
	LOUD_SOUND("loud sound", "1f50a"),
	LOUDSPEAKER("loudspeaker", "1f4e2"),
	LOVE_HOTEL("love hotel", "1f3e9"),
	LOVE_LETTER("love letter", "1f48c"),
	LOW_BRIGHTNESS("low brightness", "1f505"),
	M("m", "24c2"),
	MAG("mag", "1f50d"),
	MAG_RIGHT("mag right", "1f50e"),
	MAHJONG("mahjong", "1f004"),
	MAILBOX("mailbox", "1f4eb"),
	MAILBOX_CLOSED("mailbox closed", "1f4ea"),
	MAILBOX_WITH_MAIL("mailbox with mail", "1f4ec"),
	MAILBOX_WITH_NO_MAIL("mailbox with no mail", "1f4ed"),
	MAN("man", "1f468"),
	MAN_WITH_GUA_PI_MAO("man with gua pi mao", "1f472"),
	MAN_WITH_TURBAN("man with turban", "1f473"),
	MANS_SHOE("mans shoe", "1f45e"),
	MAPLE_LEAF("maple leaf", "1f341"),
	MASK("mask", "1f637"),
	MASSAGE("massage", "1f486"),
	MEAT_ON_BONE("meat on bone", "1f356"),
	MEDAL("medal", "1f3c5"),
	MEGA("mega", "1f4e3"),
	MELON("melon", "1f348"),
	MENORAH("menorah", "1f54e"),
	MENS("mens", "1f6b9"),
	METRO("metro", "1f687"),
	MICROPHONE("microphone", "1f3a4"),
	MICROSCOPE("microscope", "1f52c"),
	MIDDLE_FINGER("middle finger", "1f595"),
	MILKY_WAY("milky way", "1f30c"),
	MINIBUS("minibus", "1f690"),
	MINIDISC("minidisc", "1f4bd"),
	MOBILE_PHONE_OFF("mobile phone off", "1f4f4"),
	MONEY_WITH_WINGS("money with wings", "1f4b8"),
	MONEYBAG("moneybag", "1f4b0"),
	MONKEY("monkey", "1f412"),
	MONKEY_FACE("monkey face", "1f435"),
	MONORAIL("monorail", "1f69d"),
	MORTAR_BOARD("mortar board", "1f393"),
	MOSQUE("mosque", "1f54c"),
	MOTORWAY("motorway", "1f6e3"),
	MOUNT_FUJI("mount fuji", "1f5fb"),
	MOUNTAIN("mountain", "26f0"),
	MOUNTAIN_BICYCLIST("mountain bicyclist", "1f6b5"),
	MOUNTAIN_CABLEWAY("mountain cableway", "1f6a0"),
	MOUNTAIN_RAILWAY("mountain railway", "1f69e"),
	MOUSE("mouse", "1f42d"),
	MOVIE_CAMERA("movie camera", "1f3a5"),
	MOYAI("moyai", "1f5ff"),
	MUSCLE("muscle", "1f4aa"),
	MUSHROOM("mushroom", "1f344"),
	MUSICAL_KEYBOARD("musical keyboard", "1f3b9"),
	MUSICAL_NOTE("musical note", "1f3b5"),
	MUSICAL_SCORE("musical score", "1f3bc"),
	MUTE("mute", "1f507"),
	NAIL_CARE("nail care", "1f485"),
	NAME_BADGE("name badge", "1f4db"),
	NECKTIE("necktie", "1f454"),
	NERD_FACE("nerd", "1f913"),
	NEUTRAL_FACE("neutral face", "1f610"),
	NEW("new", "1f195"),
	NEW_MOON("new moon", "1f311"),
	NEW_MOON_WITH_FACE("new moon with face", "1f31a"),
	NEWSPAPER("newspaper", "1f4f0"),
	NG("ng", "1f196"),
	NIGHT_WITH_STARS("night with stars", "1f303"),
	NINE("nine", "0039-20e3"),
	NO_BELL("no bell", "1f515"),
	NO_BICYCLES("no bicycles", "1f6b3"),
	NO_ENTRY("no entry", "26d4"),
	NO_ENTRY_SIGN("no entry sign", "1f6ab"),
	NO_GOOD("no good", "1f645"),
	NO_MOBILE_PHONES("no mobile phones", "1f4f5"),
	NO_MOUTH("no mouth", "1f636"),
	NO_PEDESTRIANS("no pedestrians", "1f6b7"),
	NO_SMOKING("no smoking", "1f6ad"),
	NONPOTABLE_WATER("non-potable water", "1f6b1"),
	NOSE("nose", "1f443"),
	NOTEBOOK("notebook", "1f4d3"),
	NOTEBOOK_WITH_DECORATIVE_COVER("notebook with decorative cover", "1f4d4"),
	NOTES("notes", "1f3b6"),
	NUT_AND_BOLT("nut and bolt", "1f529"),
	O("o", "2b55"),
	OCEAN("ocean", "1f30a"),
	OCTAGONAL_SIGN("octagonal sign", "1f6d1"),
	OCTOPUS("octopus", "1f419"),
	ODEN("oden", "1f362"),
	OFFICE("office", "1f3e2"),
	OK("ok", "1f197"),
	OK_HAND("ok hand", "1f44c"),
	OK_WOMAN("ok woman", "1f646"),
	OLDER_MAN("older man", "1f474"),
	OLDER_WOMAN("older woman", "1f475"),
	OM_SYMBOL("om symbol", "1f549"),
	ON("on", "1f51b"),
	ONCOMING_AUTOMOBILE("oncoming automobile", "1f698"),
	ONCOMING_BUS("oncoming bus", "1f68d"),
	ONCOMING_POLICE_CAR("oncoming police car", "1f694"),
	ONCOMING_TAXI("oncoming taxi", "1f696"),
	ONE("one", "0031-20e3"),
	OPEN_FILE_FOLDER("open file folder", "1f4c2"),
	OPEN_HANDS("open hands", "1f450"),
	OPEN_MOUTH("open mouth", "1f62e"),
	OPHIUCHUS("ophiuchus", "26ce"),
	ORANGE_BOOK("orange book", "1f4d9"),
	ORTHODOX_CROSS("orthodox cross", "2626"),
	OUTBOX_TRAY("outbox tray", "1f4e4"),
	OX("ox", "1f402"),
	PACKAGE("package", "1f4e6"),
	PAGE_FACING_UP("page facing up", "1f4c4"),
	PAGE_WITH_CURL("page with curl", "1f4c3"),
	PAGER("pager", "1f4df"),
	PALM_TREE("palm tree", "1f334"),
	PANDA_FACE("panda face", "1f43c"),
	PAPERCLIP("paperclip", "1f4ce"),
	PARKING("parking", "1f17f"),
	PART_ALTERNATION_MARK("part alternation mark", "303d"),
	PARTLY_SUNNY("partly sunny", "26c5"),
	PASSPORT_CONTROL("passport control", "1f6c2"),
	PEACE("peace", "262e"),
	PEACH("peach", "1f351"),
	PEAR("pear", "1f350"),
	PENGUIN("penguin", "1f427"),
	PENSIVE("pensive", "1f614"),
	PERFORMING_ARTS("performing arts", "1f3ad"),
	PERSEVERE("persevere", "1f623"),
	PERSON_FROWNING("person frowning", "1f64d"),
	PERSON_WITH_BLOND_HAIR("person with blond hair", "1f471"),
	PERSON_WITH_POUTING_FACE("person with pouting face", "1f64e"),
	PICK("pick", "26cf"),
	PIG("pig", "1f437"),
	PIG_NOSE("pig nose", "1f43d"),
	PILL("pill", "1f48a"),
	PINEAPPLE("pineapple", "1f34d"),
	PISCES("pisces", "2653"),
	PIZZA("pizza", "1f355"),
	PLACE_OF_WORSHIP("place of worship", "1f6d0"),
	PLAY_PAUSE("play pause", "23ef"),
	POINT_DOWN("point down", "1f447"),
	POINT_LEFT("point left", "1f448"),
	POINT_RIGHT("point right", "1f449"),
	POINT_UP("point up", "261d"),
	POLICE_CAR("police car", "1f693"),
	POODLE("poodle", "1f429"),
	POPCORN("popcorn", "1f37f"),
	POST_OFFICE("post office", "1f3e3"),
	POSTAL_HORN("postal horn", "1f4ef"),
	POSTBOX("postbox", "1f4ee"),
	POTABLE_WATER("potable water", "1f6b0"),
	POUCH("pouch", "1f45d"),
	POULTRY_LEG("poultry leg", "1f357"),
	POUND("pound", "1f4b7"),
	POUTING_CAT("pouting cat", "1f63e"),
	PRAY("pray", "1f64f"),
	PRAYER_BEADS("prayer beads", "1f4ff"),
	PRINCESS("princess", "1f478"),
	PRINTER("printer", "1f5a8"),
	PURPLE_HEART("purple heart", "1f49c"),
	PURSE("purse", "1f45b"),
	PUSHPIN("pushpin", "1f4cc"),
	PUT_LITTER_IN_ITS_PLACE("put litter in its place", "1f6ae"),
	QUESTION("question", "2753"),
	RABBIT("rabbit", "1f430"),
	RACEHORSE("racehorse", "1f40e"),
	RADIO("radio", "1f4fb"),
	RADIO_BUTTON("radio button", "1f518"),
	RADIOACTIVE("radioactive", "2622"),
	RAGE("rage", "1f621"),
	RAILWAY_CAR("railway car", "1f683"),
	RAILWAY_TRACK("railway track", "1f6e4"),
	RAINBOW("rainbow", "1f308"),
	RAISED_HANDS("raised hands", "1f64c"),
	RAISING_HAND("raising hand", "1f64b"),
	RAM("ram", "1f40f"),
	RAMEN("ramen", "1f35c"),
	RAT("rat", "1f400"),
	RECYCLE("recycle", "267b"),
	REGISTERED("registered", "00ae"),
	RELIEVED("relieved", "1f60c"),
	REMINDER_RIBBON("reminder ribbon", "1f397"),
	REPEAT("repeat", "1f501"),
	REPEAT_ONE("repeat one", "1f502"),
	RESTROOM("restroom", "1f6bb"),
	REVOLVING_HEARTS("revolving hearts", "1f49e"),
	REWIND("rewind", "23ea"),
	RIBBON("ribbon", "1f380"),
	RICE("rice", "1f35a"),
	RICE_BALL("rice ball", "1f359"),
	RICE_CRACKER("rice cracker", "1f358"),
	RICE_SCENE("rice scene", "1f391"),
	RING("ring", "1f48d"),
	ROCKET("rocket", "1f680"),
	ROLLER_COASTER("roller coaster", "1f3a2"),
	ROOSTER("rooster", "1f413"),
	ROSE("rose", "1f339"),
	ROSETTE("rosette", "1f3f5"),
	ROTATING_LIGHT("rotating light", "1f6a8"),
	ROUND_PUSHPIN("round pushpin", "1f4cd"),
	ROWBOAT("rowboat", "1f6a3"),
	RUGBY_FOOTBALL("rugby football", "1f3c9"),
	RUNNER("runner", "1f3c3"),
	RUNNING_SHIRT_WITH_SASH("running shirt with sash", "1f3bd"),
	SA("sa", "1f202"),
	SAGITTARIUS("sagittarius", "2650"),
	SAKE("sake", "1f376"),
	SANDAL("sandal", "1f461"),
	SANTA("santa", "1f385"),
	SATELLITE("satellite", "1f4e1"),
	SAXOPHONE("saxophone", "1f3b7"),
	SCALES("scales", "2696"),
	SCHOOL("school", "1f3eb"),
	SCHOOL_SATCHEL("school satchel", "1f392"),
	SCISSORS("scissors", "2702"),
	SCORPION("scorpion", "1f982"),
	SCORPIUS("scorpius", "264f"),
	SCREAM("scream", "1f631"),
	SCREAM_CAT("scream cat", "1f640"),
	SCROLL("scroll", "1f4dc"),
	SEAT("seat", "1f4ba"),
	SECRET("secret", "3299"),
	SEE_NO_EVIL("see no evil", "1f648"),
	SEEDLING("seedling", "1f331"),
	SEVEN("seven", "0037-20e3"),
	SHAMROCK("shamrock", "2618"),
	SHAVED_ICE("shaved ice", "1f367"),
	SHEEP("sheep", "1f411"),
	SHELL("shell", "1f41a"),
	SHIELD("shield", "1f6e1"),
	SHIP("ship", "1f6a2"),
	SHIRT("shirt", "1f455"),
	SHOPPING_BAGS("shopping bags", "1f6cd"),
	SHOWER("shower", "1f6bf"),
	SIGNAL_STRENGTH("signal strength", "1f4f6"),
	SIX("six", "0036-20e3"),
	SIX_POINTED_STAR("six pointed star", "1f52f"),
	SKI("ski", "1f3bf"),
	SKIER("skier", "26f7"),
	SKULL("skull", "1f480"),
	SKULL_AND_CROSSBONES("skull crossbones", "2620"),
	SLEEPING("sleeping", "1f634"),
	SLEEPING_ACCOMMODATION("sleeping accommodation", "1f6cc"),
	SLEEPY("sleepy", "1f62a"),
	SLIGHTLY_SMILING_FACE("slight smile", "1f642"),
	SLOT_MACHINE("slot machine", "1f3b0"),
	SMALL_RED_TRIANGLE("small red triangle", "1f53a"),
	SMALL_RED_TRIANGLE_DOWN("small red triangle down", "1f53b"),
	SMILE("smile", "1f604"),
	SMILE_CAT("smile cat", "1f638"),
	SMILEY("smiley", "1f603"),
	SMILEY_CAT("smiley cat", "1f63a"),
	SMILING_IMP("smiling imp", "1f608"),
	SMIRK("smirk", "1f60f"),
	SMIRK_CAT("smirk cat", "1f63c"),
	SMOKING("smoking", "1f6ac"),
	SNAIL("snail", "1f40c"),
	SNAKE("snake", "1f40d"),
	SNOWBOARDER("snowboarder", "1f3c2"),
	SNOWFLAKE("snowflake", "2744"),
	SNOWMAN("snowman", "26c4"),
	SOB("sob", "1f62d"),
	SOCCER("soccer", "26bd"),
	SOON("soon", "1f51c"),
	SOS("sos", "1f198"),
	SOUND("sound", "1f509"),
	SPACE_INVADER("space invader", "1f47e"),
	SPADES("spades", "2660"),
	SPAGHETTI("spaghetti", "1f35d"),
	SPARKLE("sparkle", "2747"),
	SPARKLER("sparkler", "1f387"),
	SPARKLES("sparkles", "2728"),
	SPARKLING_HEART("sparkling heart", "1f496"),
	SPEAK_NO_EVIL("speak no evil", "1f64a"),
	SPEAKER("speaker", "1f508"),
	SPEECH_BALLOON("speech balloon", "1f4ac"),
	SPEECH_LEFT("speech left", "1f5e8"),
	SPEEDBOAT("speedboat", "1f6a4"),
	SPIDER("spider", "1f577"),
	SPIDER_WEB("spider web", "1f578"),
	STADIUM("stadium", "1f3df"),
	STAR("star", "2b50"),
	STAR_AND_CRESCENT("star and crescent", "262a"),
	STAR_OF_DAVID("star of david", "2721"),
	STARS("stars", "1f320"),
	STATION("station", "1f689"),
	STATUE_OF_LIBERTY("statue of liberty", "1f5fd"),
	STEAM_LOCOMOTIVE("steam locomotive", "1f682"),
	STEW("stew", "1f372"),
	STOPWATCH("stopwatch", "23f1"),
	STRAIGHT_RULER("straight ruler", "1f4cf"),
	STRAWBERRY("strawberry", "1f353"),
	SUN_WITH_FACE("sun with face", "1f31e"),
	SUNFLOWER("sunflower", "1f33b"),
	SUNGLASSES("sunglasses", "1f60e"),
	SUNNY("sunny", "2600"),
	SUNRISE("sunrise", "1f305"),
	SUNRISE_OVER_MOUNTAINS("sunrise over mountains", "1f304"),
	SURFER("surfer", "1f3c4"),
	SUSHI("sushi", "1f363"),
	SUSPENSION_RAILWAY("suspension railway", "1f69f"),
	SWEAT("sweat", "1f613"),
	SWEAT_DROPS("sweat drops", "1f4a6"),
	SWEAT_SMILE("sweat smile", "1f605"),
	SWEET_POTATO("sweet potato", "1f360"),
	SWIMMER("swimmer", "1f3ca"),
	SYMBOLS("symbols", "1f523"),
	SYNAGOGUE("synagogue", "1f54d"),
	SYRINGE("syringe", "1f489"),
	TACO("taco", "1f32e"),
	TADA("tada", "1f389"),
	TANABATA_TREE("tanabata tree", "1f38b"),
	TANGERINE("tangerine", "1f34a"),
	TAURUS("taurus", "2649"),
	TAXI("taxi", "1f695"),
	TEA("tea", "1f375"),
	TELEPHONE("telephone", "260e"),
	TELEPHONE_RECEIVER("telephone receiver", "1f4de"),
	TELESCOPE("telescope", "1f52d"),
	TENNIS("tennis", "1f3be"),
	TENT("tent", "26fa"),
	THERMOMETER("thermometer", "1f321"),
	THINKING_FACE("thinking", "1f914"),
	THOUGHT_BALLOON("thought balloon", "1f4ad"),
	THREE("three", "0033-20e3"),
	THUMBSDOWN("thumbsdown", "1f44e"),
	THUMBSUP("thumbsup", "1f44d"),
	TICKET("ticket", "1f3ab"),
	TIGER("tiger", "1f42f"),
	TIRED_FACE("tired face", "1f62b"),
	TM("tm", "2122"),
	TOILET("toilet", "1f6bd"),
	TOKYO_TOWER("tokyo tower", "1f5fc"),
	TOMATO("tomato", "1f345"),
	TONGUE("tongue", "1f445"),
	TOP("top", "1f51d"),
	TOPHAT("tophat", "1f3a9"),
	TRACK_NEXT("track next", "23ed"),
	TRACK_PREVIOUS("track previous", "23ee"),
	TRACKBALL("trackball", "1f5b2"),
	TRACTOR("tractor", "1f69c"),
	TRAFFIC_LIGHT("traffic light", "1f6a5"),
	TRAIN("train", "1f68b"),
	TRAM("tram", "1f68a"),
	TRIANGULAR_FLAG_ON_POST("triangular flag on post", "1f6a9"),
	TRIANGULAR_RULER("triangular ruler", "1f4d0"),
	TRIDENT("trident", "1f531"),
	TRIUMPH("triumph", "1f624"),
	TROLLEYBUS("trolleybus", "1f68e"),
	TROPHY("trophy", "1f3c6"),
	TROPICAL_DRINK("tropical drink", "1f379"),
	TROPICAL_FISH("tropical fish", "1f420"),
	TRUCK("truck", "1f69a"),
	TRUMPET("trumpet", "1f3ba"),
	TULIP("tulip", "1f337"),
	TURKEY("turkey", "1f983"),
	TURTLE("turtle", "1f422"),
	TV("tv", "1f4fa"),
	TWISTED_RIGHTWARDS_ARROWS("twisted rightwards arrows", "1f500"),
	TWO("two", "0032-20e3"),
	TWO_HEARTS("two hearts", "1f495"),
	TWO_MEN_HOLDING_HANDS("two men holding hands", "1f46c"),
	TWO_WOMEN_HOLDING_HANDS("two women holding hands", "1f46d"),
	UMBRELLA("umbrella", "2614"),
	UNAMUSED("unamused", "1f612"),
	UNDERAGE("underage", "1f51e"),
	UNLOCK("unlock", "1f513"),
	UP("up", "1f199"),
	UPSIDE_DOWN_FACE("upside down", "1f643"),
	V("v", "270c"),
	VERTICAL_TRAFFIC_LIGHT("vertical traffic light", "1f6a6"),
	VHS("vhs", "1f4fc"),
	VIBRATION_MODE("vibration mode", "1f4f3"),
	VIDEO_CAMERA("video camera", "1f4f9"),
	VIDEO_GAME("video game", "1f3ae"),
	VIOLIN("violin", "1f3bb"),
	VIRGO("virgo", "264d"),
	VOLCANO("volcano", "1f30b"),
	VOLLEYBALL("volleyball", "1f3d0"),
	VS("vs", "1f19a"),
	WALKING("walking", "1f6b6"),
	WANING_CRESCENT_MOON("waning crescent moon", "1f318"),
	WANING_GIBBOUS_MOON("waning gibbous moon", "1f316"),
	WARNING("warning", "26a0"),
	WASTEBASKET("wastebasket", "1f5d1"),
	WATCH("watch", "231a"),
	WATER_BUFFALO("water buffalo", "1f403"),
	WATERMELON("watermelon", "1f349"),
	WAVE("wave", "1f44b"),
	WAVING_BLACK_FLAG("black flag", "1f3f4"),
	WAVING_WHITE_FLAG("white flag", "1f3f3"),
	WAVY_DASH("wavy dash", "3030"),
	WAXING_CRESCENT_MOON("waxing crescent moon", "1f312"),
	WC("wc", "1f6be"),
	WEARY("weary", "1f629"),
	WEDDING("wedding", "1f492"),
	WHALE("whale", "1f433"),
	WHEEL_OF_DHARMA("wheel of dharma", "2638"),
	WHEELCHAIR("wheelchair", "267f"),
	WHITE_CHECK_MARK("white check mark", "2705"),
	WHITE_FLOWER("white flower", "1f4ae"),
	WIND_BLOWING_FACE("wind blowing face", "1f32c"),
	WIND_CHIME("wind chime", "1f390"),
	WINE_GLASS("wine glass", "1f377"),
	WINK("wink", "1f609"),
	WOLF("wolf", "1f43a"),
	WOMAN("woman", "1f469"),
	WOMANS_CLOTHES("womans clothes", "1f45a"),
	WOMANS_HAT("womans hat", "1f452"),
	WOMENS("womens", "1f6ba"),
	WORRIED("worried", "1f61f"),
	WRENCH("wrench", "1f527"),
	WRITING_HAND("writing hand", "270d"),
	X("x", "274c"),
	YELLOW_HEART("yellow heart", "1f49b"),
	YEN("yen", "1f4b4"),
	YIN_YANG("yin yang", "262f"),
	YUM("yum", "1f60b"),
	ZAP("zap", "26a1"),
	ZERO("zero", "0030-20e3"),
	ZIPPER_MOUTH_FACE("zipper mouth", "1f910"),
	ZZZ("zzz", "1f4a4"),
	ÅLAND_ISLANDS("ax flag", "1f1e6-1f1fd"),
	;

	private static final Map<String, Emoji> EMOJIS;
	private static final ImmutableListMultimap<String, String> EMOJI_TRIGGERS;
	private static final Splitter SPLITTER = Splitter.on(" ").trimResults().omitEmptyStrings();

	private final String triggerPhrase;
	private final String codepoint;

	static
	{
		ImmutableMap.Builder<String, Emoji> emojiBuilder = new ImmutableMap.Builder<>();
		ImmutableListMultimap.Builder<String, String> triggerBuilder = new ImmutableListMultimap.Builder<>();

		for (final Emoji emoji : values())
		{
			String key = SPLITTER.splitToList(emoji.triggerPhrase).get(0);
			triggerBuilder.put(key, emoji.triggerPhrase);
			emojiBuilder.put(emoji.triggerPhrase, emoji);
		}

		EMOJIS = emojiBuilder.build();
		EMOJI_TRIGGERS = triggerBuilder.build();
	}

	BufferedImage loadImage()
	{
		return ImageUtil.getResourceStreamFromClass(getClass(), codepoint + ".png");
	}

	/**
	 * Gets a trigger phrase from a word
	 * We prefer the longest phrase
	 * @param key usually first word of a trigger phrase
	 * @return sorted list of trigeger phrases
	 */
	static List<List<String>> getTriggers(String key)
	{
		List<String> triggers = EMOJI_TRIGGERS.get(key);

		if (triggers == null)
		{
			return null;
		}

		List<List<String>> wordsToTry = new ArrayList<>();

		for (String trigger : triggers)
		{
			wordsToTry.add(SPLITTER.splitToList(trigger));
		}

		wordsToTry.sort((x,y) -> Integer.compare(y.size(), x.size()));

		return wordsToTry;
	}

	static Emoji getEmoji(String trigger)
	{
		return EMOJIS.get(trigger);
	}

}

