package com.markofdarknesshelper;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.Alpha;

import java.awt.Color;

@ConfigGroup("com/markofdarknesshelper")
public interface MarkOfDarknessHelperConfig extends Config
{
    @ConfigItem(
            keyName = "onlyArceuus",
            name = "Only on Arceuus Spellbook",
            description = "Only display the reminder box when on the Arceuus spellbook.",
            position = 1
    )
    default boolean onlyArceuus() { return true; }

    @ConfigItem(
            keyName = "shouldNotify",
            name = "Notify when Mark of Darkness expires",
            description = "Sends a notification once Mark of Darkness needs to be recast.",
            position = 2
    )
    default boolean shouldNotify() { return true; }

    @ConfigItem(
            keyName = "earlyNotify",
            name = "Early Notification",
            description = "Start the reminder when 'Your Mark of Darkness is about to run out.' appears in chat.",
            position = 3
    )
    default boolean earlyNotify() { return false; }

    @ConfigItem(
            keyName = "overlayTimeoutSeconds",
            name = "Reminder Duration (seconds)",
            description = "How many seconds the reminder will flash after Mark of Darkness expires.",
            position = 4
    )
    default int overlayTimeoutSeconds() { return 180; }

    @Alpha
    @ConfigItem(
            keyName = "boxColor",
            name = "Box Color",
            description = "Color of the non-flashing reminder box.",
            position = 5
    )
    default Color boxColor() { return new Color(0, 0, 0, 100); }

    @ConfigItem(
            keyName = "shouldFlash",
            name = "Flash the Reminder Box",
            description = "Makes the reminder box flash.",
            position = 6
    )
    default boolean shouldFlash() { return true; }

    @Alpha
    @ConfigItem(
            keyName = "flashColor",
            name = "Flashing Box Color",
            description = "Color of the flashing reminder box.",
            position = 7
    )
    default Color flashColor() { return new Color(128, 0, 255, 150); }
}
package com.markofdarknesshelper;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import javax.inject.Inject;
import net.runelite.api.Client;
import net.runelite.api.Varbits;
import net.runelite.client.ui.overlay.OverlayPanel;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.components.LineComponent;

public class MarkOfDarknessHelperOverlay extends OverlayPanel
{
    private final MarkOfDarknessHelperConfig config;
    private final Client client;
    private boolean showReminder = false;
    private long reminderStartTime = 0;

    @Inject
    public MarkOfDarknessHelperOverlay(MarkOfDarknessHelperConfig config, Client client)
    {
        this.config = config;
        this.client = client;
    }

    public void showReminderBox() {
        this.showReminder = true;
        this.reminderStartTime = System.currentTimeMillis();
    }

    public void hideReminderBox() {
        this.showReminder = false;
        this.reminderStartTime = 0;
    }

    private boolean shouldShowReminder()
    {
        if (!showReminder)
        {
            return false;
        }
        if (reminderStartTime > 0 && (System.currentTimeMillis() - reminderStartTime) / 1000 > config.overlayTimeoutSeconds())
        {
            showReminder = false;
            reminderStartTime = 0;
            return false;
        }
        return true;
    }

    @Override
    public Dimension render(Graphics2D graphics)
    {
        if (config.onlyArceuus() && client.getVarbitValue(Varbits.SPELLBOOK) != 3)
        {
            return null;
        }

        if (!shouldShowReminder())
        {
            return null;
        }

        panelComponent.getChildren().clear();
        panelComponent.getChildren().add(LineComponent.builder()
                .left("Cast Mark of Darkness!")
                .build());

        Color userFlashColor = config.flashColor();
        Color userBoxColor = config.boxColor();

        if (config.shouldFlash())
        {
            if (client.getGameCycle() % 40 >= 20)
            {
                panelComponent.setBackgroundColor(userBoxColor);
            }
            else
            {
                panelComponent.setBackgroundColor(userFlashColor);
            }
        }
        else
        {
            panelComponent.setBackgroundColor(userBoxColor);
        }

        setPosition(OverlayPosition.ABOVE_CHATBOX_RIGHT);
        return panelComponent.render(graphics);
    }
}
package com.markofdarknesshelper;

import com.google.inject.Provides;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.events.ChatMessage;
import net.runelite.api.ChatMessageType;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import javax.inject.Inject;

@Slf4j
@PluginDescriptor(
        name = "Mark of Darkness Helper"
)
public class MarkOfDarknessHelperPlugin extends Plugin
{

    @Inject
    private MarkOfDarknessHelperOverlay overlay;

    @Inject
    private MarkOfDarknessHelperConfig config;

    @Inject
    private OverlayManager overlayManager;

    private static final String MARK_OF_DARKNESS_MESSAGE = "You have placed a Mark of Darkness upon yourself.</col>";
    private static final String MARK_OF_DARKNESS_EARLY_MESSAGE = "Your Mark of Darkness is about to run out.";
    private static final String MARK_OF_DARKNESS_EXPIRED_MESSAGE = "Your Mark of Darkness has faded away.";

    @Override
    protected void startUp() throws Exception
    {
        overlayManager.add(overlay);
    }

    @Override
    protected void shutDown() throws Exception
    {
        overlayManager.remove(overlay);
    }

    @Subscribe
    public void onChatMessage(ChatMessage event)
    {
        if (event.getType() != ChatMessageType.GAMEMESSAGE)
        {
            return;
        }

        if (event.getMessage().endsWith(MARK_OF_DARKNESS_MESSAGE))
        {
            overlay.hideReminderBox();
        }
        else if (config.earlyNotify() && event.getMessage().contains(MARK_OF_DARKNESS_EARLY_MESSAGE))
        {
            overlay.showReminderBox();
        }
        else if (event.getMessage().contains(MARK_OF_DARKNESS_EXPIRED_MESSAGE))
        {
            overlay.showReminderBox();
        }
    }

    // private boolean isWieldingPurgingStaff()
    // {
    //     final int PURGING_STAFF_ID = 29594; // Replace with actual ID if known
    //     ItemContainer equipment = client.getItemContainer(InventoryID.EQUIPMENT);
    //     if (equipment != null)
    //     {
    //         for (Item item : equipment.getItems())
    //         {
    //             if (item != null && item.getId() == PURGING_STAFF_ID)
    //             {
    //                 return true;
    //             }
    //         }
    //     }
    //     return false;
    // }

    @Provides
    MarkOfDarknessHelperConfig provideConfig(ConfigManager configManager)
    {
        return configManager.getConfig(MarkOfDarknessHelperConfig.class);
    }
}

package com.markofdarknesshelper;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class MarkOfDarknessHelperPluginTest
{
    public static void main(String[] args) throws Exception
    {
        ExternalPluginManager.loadBuiltin(MarkOfDarknessHelperPlugin.class);
        RuneLite.main(args);
    }
}
