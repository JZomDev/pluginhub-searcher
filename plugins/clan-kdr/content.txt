package com.clanKDR;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class ClanKDRPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(ClanKDRPlugin.class);
		RuneLite.main(args);
	}
}
package com.clanKDR;

import com.google.inject.Provides;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.ChatMessageType;
import net.runelite.api.Client;
import net.runelite.api.clan.ClanMember;
import net.runelite.api.clan.ClanSettings;
import net.runelite.api.events.ChatMessage;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;
import net.runelite.client.util.Text;
import org.apache.commons.lang3.StringUtils;

import javax.inject.Inject;

@Slf4j
@PluginDescriptor(
		name = "Clan KDR"
)
public class ClanKDRPlugin extends Plugin {
	@Inject
	private Client client;

	@Inject
	private ClanKDRConfig config;

	@Inject
	private OverlayManager overlayManager;

	@Inject
	private ClanKDROverlay overlay;
	@Getter(AccessLevel.PACKAGE)
	private int clanKills = 0, clanDeaths = 0, clanKillsTotalValue = 0, clanDeathsTotalValue = 0;

	@Provides
	ClanKDRConfig provideConfig(ConfigManager configManager) {
		return configManager.getConfig(ClanKDRConfig.class);
	}

	@Override
	protected void startUp() {
		this.overlayManager.add(this.overlay);
	}

	@Override
	protected void shutDown() {
		this.overlayManager.remove(this.overlay);
		resetKDR();
	}

	private void resetKDR() {
		clanKills = 0;
		clanDeaths = 0;
		clanKillsTotalValue = 0;
		clanDeathsTotalValue = 0;
	}

	@Subscribe
	public void onChatMessage(ChatMessage event) {
		if (event.getType() != ChatMessageType.CLAN_MESSAGE) {
			return;
		}

		if (event.getMessage().contains("has defeated")) {
			if(config.excludeFriendlyFire()){
				String playerKilled = StringUtils.substringBetween(event.getMessage(), "has defeated ", " and received");
				ClanSettings clanSettings = this.client.getClanSettings();
				for (ClanMember clanMember : clanSettings.getMembers()) {
					if(Text.toJagexName(clanMember.getName()).equalsIgnoreCase(Text.toJagexName(playerKilled))){
						return;
					}
				}
			}
			String killValue = StringUtils.substringBetween(event.getMessage(), "(", ")");
			if (config.excludeLowLoot()){
				if(killValue == null){
					return;
				}
				int value = getKillValue(killValue);
				if(value <= config.minimumValue()){
					return;
				}
			}
			clanKills++;
			if (killValue != null) {
				clanKillsTotalValue += getKillValue(killValue);
			}
		}

		if (event.getMessage().contains("has been defeated")) {
			if(config.excludeFriendlyFire()){
				String playerKiller;
				if(event.getMessage().contains("Wilderness")){
					playerKiller = StringUtils.substringBetween(event.getMessage(), "has been defeated by ", " in The Wilderness");
				}else{
					playerKiller = StringUtils.substringBetween(event.getMessage(), "has been defeated by ", " and lost");
				}
				ClanSettings clanSettings = this.client.getClanSettings();
				for (ClanMember clanMember : clanSettings.getMembers()) {
					if(Text.toJagexName(clanMember.getName()).equalsIgnoreCase(Text.toJagexName(playerKiller))){
						return;
					}
				}
			}
			String deathValue = StringUtils.substringBetween(event.getMessage(), "(", ")");
			if (deathValue != null) {
				clanDeathsTotalValue += getKillValue(deathValue);
				clanDeaths++;
			} else {
				if(!config.excludeZeroValueDeaths()){
					clanDeaths++;
				}
			}
		}
	}

	private int getKillValue(String killMsg){
		return Integer.parseInt(killMsg.replace(",", "").replace("coins", "").replace(" ", ""));
	}
}

package com.clanKDR;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.Range;

@ConfigGroup("clanKDR")
public interface ClanKDRConfig extends Config {
	@ConfigItem(
			keyName = "showValue",
			name = "Show value",
			description = "Configures if running total value should be displayed",
			position = 1
	)
	default boolean showValue() {
		return false;
	}

	@ConfigItem(
			keyName = "excludeLowLoot",
			name = "Exclude kills below value",
			description = "Configures if kills below certain value shouldn't be counted",
			position = 2
	)
	default boolean excludeLowLoot() {
		return false;
	}

	@Range(
			min = 1
	)
	@ConfigItem(
			keyName = "lootThreshold",
			name = "Minimum kill value",
			description = "Lowest value to count as a kill",
			position = 3
	)
	default int minimumValue()
	{
		return 1;
	}

	@ConfigItem(
			keyName = "excludeZeroValueDeaths",
			name = "Exclude zero value deaths",
			description = "Configures if deaths with no value should be counted",
			position = 4
	)
	default boolean excludeZeroValueDeaths() {
		return true;
	}

	@ConfigItem(
		keyName = "excludeFriendlyFire",
		name = "Exclude friendly fire",
		description = "Excludes kills and deaths between clan members",
		position = 5
	)
	default boolean excludeFriendlyFire() { return false; }
}

package com.clanKDR;

import net.runelite.api.Client;
import net.runelite.client.ui.overlay.OverlayMenuEntry;
import net.runelite.client.ui.overlay.OverlayPanel;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.OverlayPriority;
import net.runelite.client.ui.overlay.components.ComponentOrientation;
import net.runelite.client.ui.overlay.components.TitleComponent;

import javax.inject.Inject;
import java.awt.*;
import java.text.DecimalFormat;

import static net.runelite.api.MenuAction.RUNELITE_OVERLAY_CONFIG;
import static net.runelite.client.ui.overlay.OverlayManager.OPTION_CONFIGURE;

public class ClanKDROverlay extends OverlayPanel {
	private final ClanKDRPlugin plugin;

	private final ClanKDRConfig config;
	@Inject
	private Client client;

	private final DecimalFormat decFormat = new DecimalFormat("###,###");

	@Inject
	private ClanKDROverlay(ClanKDRPlugin plugin, ClanKDRConfig config) {
		this.plugin = plugin;
		this.config = config;
		setPosition(OverlayPosition.BOTTOM_RIGHT);
		setPriority(OverlayPriority.LOW);
		panelComponent.setWrap(true);
		panelComponent.setOrientation(ComponentOrientation.HORIZONTAL);
		getMenuEntries().add(new OverlayMenuEntry(RUNELITE_OVERLAY_CONFIG, OPTION_CONFIGURE, "Clan KDR overlay"));
	}

	@Override
	public Dimension render(Graphics2D graphics) {

		if (client.getClanChannel() != null) {

			panelComponent.getChildren().add(TitleComponent.builder().text(client.getClanChannel().getName()).build());
			panelComponent.getChildren().add(TitleComponent.builder().text("Kills: " + plugin.getClanKills() + " | "
					+ "Deaths: " + plugin.getClanDeaths()).build());
			if (config.showValue()) {
				panelComponent.getChildren().add(TitleComponent.builder().text("Kills Value: " + decFormat.format(plugin.getClanKillsTotalValue())).build());
				panelComponent.getChildren().add(TitleComponent.builder().text("Deaths Value: " + decFormat.format(plugin.getClanDeathsTotalValue())).build());
			}
		}
		return super.render(graphics);
	}
}

