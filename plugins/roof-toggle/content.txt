package degenereaper.rooftoggle;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class RoofTogglePluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(RoofTogglePlugin.class);
		RuneLite.main(args);
	}
}
package degenereaper.rooftoggle;

import com.google.inject.Provides;
import net.runelite.api.*;
import net.runelite.api.widgets.Widget;
import net.runelite.api.widgets.ComponentID;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.input.KeyManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

import javax.inject.Inject;

@PluginDescriptor(
        name = "Roof Toggle",
        description = "Allows use of a keybind for toggling roofs on and off without needing to open the in-game settings menu.",
        tags = {"roof", "toggle", "keybind"}
)
public class RoofTogglePlugin extends Plugin {
    @Inject
    private Client client;

    @Inject
    private KeyManager keyManager;

    @Inject
    private RoofToggleKeyListener inputListener;

    private boolean typing;

    protected boolean isTyping() {
        return typing;
    }

    protected void setTyping(boolean val) {
        typing = val;
    }

    @Provides
    RoofToggleConfig getConfig(ConfigManager configManager) {
        return configManager.getConfig(RoofToggleConfig.class);
    }

    @Override
    protected void startUp() throws Exception {
        typing = false;
        keyManager.registerKeyListener(inputListener);
    }

    @Override
    protected void shutDown() throws Exception {
        keyManager.unregisterKeyListener(inputListener);
    }

    boolean chatboxFocused()
    {
        Widget chatboxParent = client.getWidget(ComponentID.CHATBOX_PARENT);
        if (chatboxParent == null || chatboxParent.getOnKeyListener() == null)
        {
            return false;
        }

        // If the search box on the world map is open and focused, ~keypress_permit blocks the keypress
        Widget worldMapSearch = client.getWidget(ComponentID.WORLD_MAP_SEARCH);
        if (worldMapSearch != null && client.getVarcIntValue(VarClientInt.WORLD_MAP_SEARCH_FOCUSED) == 1)
        {
            return false;
        }

        // The report interface blocks input due to 162:54 being hidden, however player/npc dialog and
        // options do this too, and so we can't disable remapping just due to 162:54 being hidden.
        Widget report = client.getWidget(ComponentID.REPORT_ABUSE_PARENT);
        if (report != null)
        {
            return false;
        }

        return true;
    }
}

package degenereaper.rooftoggle;

import java.awt.event.KeyEvent;
import javax.inject.Inject;

import com.google.common.base.Strings;
import net.runelite.api.Client;
import net.runelite.api.VarClientStr;
import net.runelite.client.callback.ClientThread;
import net.runelite.client.input.KeyListener;

class RoofToggleKeyListener implements KeyListener
{
    private static final int SET_REMOVE_ROOFS = 4577;

    @Inject
    private RoofTogglePlugin plugin;

    @Inject
    private RoofToggleConfig config;

    @Inject
    private Client client;

    @Inject
    private ClientThread clientThread;

    @Override
    public void keyTyped(KeyEvent e)
    {
    }

    @Override
    public void keyPressed(KeyEvent e) {
        // If focused on chatbox, don't execute
        if (!plugin.chatboxFocused()) {
            return;
        }

        // If not currently typing, toggle roof
        if (!plugin.isTyping()) {
            if (config.toggle().matches(e)) {
                clientThread.invoke(() -> client.runScript(SET_REMOVE_ROOFS));
            }

            // If chatbox is opened from key press, set typing to true
            switch (e.getKeyCode())
            {
                case KeyEvent.VK_ENTER:
                case KeyEvent.VK_SLASH:
                case KeyEvent.VK_COLON:
                    plugin.setTyping(true);
                    break;
            }
        } else {
            // If typing, set typing to false when using any of the following keys
            switch (e.getKeyCode())
            {
                case KeyEvent.VK_ESCAPE:
                    e.consume();
                    plugin.setTyping(false);
                    break;
                case KeyEvent.VK_ENTER:
                    plugin.setTyping(false);
                    break;
                case KeyEvent.VK_BACK_SPACE:
                    // Only lock chat on backspace when the typed text is now empty
                    if (Strings.isNullOrEmpty(client.getVarcStrValue(VarClientStr.CHATBOX_TYPED_TEXT)))
                    {
                        plugin.setTyping(false);
                    }
                    break;
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e)
    {
    }
}

package degenereaper.rooftoggle;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.ModifierlessKeybind;
import java.awt.event.KeyEvent;

@ConfigGroup("rooftoggle")
public interface RoofToggleConfig extends Config {
    @ConfigItem(
            position = 0,
            keyName = "toggle",
            name = "Roof Toggle Keybind",
            description = "The keybind used to toggle roofs."
    )

    default ModifierlessKeybind toggle()
    {
        return new ModifierlessKeybind(KeyEvent.VK_R, 0);
    }
}

