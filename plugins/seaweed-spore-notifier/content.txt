package io.github.rbbi.plugin;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class SeaweedSporeNotifierPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(SeaweedSporeNotifierPlugin.class);
		RuneLite.main(args);
	}
}
package io.github.rbbi.plugin;

import net.runelite.api.ItemID;
import net.runelite.api.TileItem;
import net.runelite.api.events.ItemSpawned;
import net.runelite.client.Notifier;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

/**
 * Tests for {@link SeaweedSporeNotifierPlugin}
 *
 * @author robbie, created on 09/08/2022 21:56
 */
@RunWith(MockitoJUnitRunner.class)
public class SeaweedSporeNotifierPluginUnitTests
{

	@Mock
	private Notifier notifier;

	@Mock
	private SeaweedSporeNotifierConfig config;

	@InjectMocks
	private SeaweedSporeNotifierPlugin plugin;

	@Test
	public void testSeaweedSpawnedNotificationMessage()
	{
		when(config.minQuantity()).thenReturn(1);
		plugin.onItemSpawned(newItemWithQuantity(ItemID.SEAWEED_SPORE, 1));
		verify(notifier, times(1)).notify("1 seaweed spore has spawned!");
	}

	@Test
	public void testSpawnedQuantitySameAsConfigMinimumNotifies() {
		when(config.minQuantity()).thenReturn(2);
		plugin.onItemSpawned(newItemWithQuantity(ItemID.SEAWEED_SPORE, 2));
		verify(notifier, times(1)).notify("2 seaweed spores have spawned!");
	}

	@Test
	public void testSpawnedQuantityAboveConfigMinimumNotifies() {
		when(config.minQuantity()).thenReturn(2);
		plugin.onItemSpawned(newItemWithQuantity(ItemID.SEAWEED_SPORE, 3));
		verify(notifier, times(1)).notify("3 seaweed spores have spawned!");
	}

	@Test
	public void testSpawnedQuantityBelowConfigMinimumDoesntNotify() {
		when(config.minQuantity()).thenReturn(3);
		plugin.onItemSpawned(newItemWithQuantity(ItemID.SEAWEED_SPORE, 2));
		verify(notifier, times(0)).notify(any());
	}

	@Test
	public void testNonSeaweedSporeItemDoesNotNotify()
	{
		plugin.onItemSpawned(newItemWithQuantity(ItemID.CABBAGE, 1));
		verify(notifier, times(0)).notify(any());
	}

	private ItemSpawned newItemWithQuantity(int itemId, int quantity)
	{
		TileItem tileItem = mock(TileItem.class);
		when(tileItem.getId()).thenReturn(itemId);
		when(tileItem.getQuantity()).thenReturn(quantity);
		return new ItemSpawned(null, tileItem);
	}

}

package io.github.rbbi.plugin;

import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.ItemID;
import net.runelite.api.TileItem;
import net.runelite.api.events.ItemSpawned;
import net.runelite.client.Notifier;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

@Slf4j
@PluginDescriptor(
	name = "Seaweed Spore Notifier"
)
public class SeaweedSporeNotifierPlugin extends Plugin
{

	@Inject
	private Notifier notifier;

	@Inject
	private SeaweedSporeNotifierConfig config;

	@Provides
	SeaweedSporeNotifierConfig provideConfig(ConfigManager configManager) {
		return configManager.getConfig(SeaweedSporeNotifierConfig.class);
	}

	@Subscribe
	public void onItemSpawned(ItemSpawned itemSpawned)
	{
		TileItem item = itemSpawned.getItem();
		if (item.getId() == ItemID.SEAWEED_SPORE)
		{
			int sporeQuantity = item.getQuantity();
			if (sporeQuantity < config.minQuantity()) return;

			boolean singleSpore = sporeQuantity == 1;

			notifier.notify(sporeQuantity + " seaweed spore"
				+ (singleSpore ? " " : "s ")
				+ (singleSpore ? "has" : "have")
				+ " spawned!");
		}
	}

}

package io.github.rbbi.plugin;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;
import net.runelite.client.config.Range;

/**
 * @author robbie, created on 09/08/2022 21:47
 */
@ConfigGroup("seaweedsporenotifier")
public interface SeaweedSporeNotifierConfig extends Config
{

	@Range(
		min = 1,
		max = 3
	)
	@ConfigItem(
		keyName = "minQuantity",
		name = "Minimum quantity",
		description = "The minimum quantity of seaweed spores to trigger a notification."
	)
	default int minQuantity()
	{
		return 1;
	}

}

