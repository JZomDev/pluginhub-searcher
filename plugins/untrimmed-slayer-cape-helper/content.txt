package com.clairemira;

import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.Experience;
import net.runelite.api.Skill;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

@Slf4j
@PluginDescriptor(
	name = "Untrimmed Slayer Cape Helper",
	description = "Provides helpful information to obtain an untrimmed 99 Slayer cape.",
	tags = {"untrimmed","slayer","cape","helper","cannon"}
)
public class UntrimmedSlayerCapeHelperPlugin extends Plugin
{
	@Inject
	private Client client;

	@Inject
	private OverlayManager overlayManager;

	@Inject
	private UntrimmedSlayerCapeHelperConfig config;

	@Inject
	private UntrimmedSlayerCapeHelperCannonExpOverlayPanel cannonExpOverlay;

	@Override
	protected void startUp() throws Exception
	{
		overlayManager.add(cannonExpOverlay);
	}

	@Override
	protected void shutDown() throws Exception
	{
		overlayManager.remove(cannonExpOverlay);
	}

	@Provides
	UntrimmedSlayerCapeHelperConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(UntrimmedSlayerCapeHelperConfig.class);
	}

	public int getCannonExperienceRemaining()
    {
        int exp99 = Experience.getXpForLevel(99);
        int slayerExp = client.getSkillExperience(Skill.SLAYER);
        int hpExp = client.getSkillExperience(Skill.HITPOINTS);

        double cannonExpRemaining = (((exp99 - slayerExp) * 1.3) + hpExp - exp99) / 1.3;

        return (int) Math.round(cannonExpRemaining);
    }
}

package com.clairemira;

import java.awt.*;
import java.text.NumberFormat;
import javax.inject.Inject;
import net.runelite.api.Client;
import net.runelite.client.ui.overlay.OverlayPanel;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.ui.overlay.components.TitleComponent;

public class UntrimmedSlayerCapeHelperCannonExpOverlayPanel extends OverlayPanel {
    private final UntrimmedSlayerCapeHelperPlugin plugin;
    private final UntrimmedSlayerCapeHelperConfig config;

    @Inject
    public UntrimmedSlayerCapeHelperCannonExpOverlayPanel(Client client, UntrimmedSlayerCapeHelperPlugin plugin, UntrimmedSlayerCapeHelperConfig config)
    {
        super(plugin);
        this.plugin = plugin;
        this.config = config;

        panelComponent.setPreferredSize(new Dimension(110,100));
        setPosition(OverlayPosition.TOP_LEFT);
    }

    @Override
    public Dimension render(Graphics2D graphics)
    {
        if (!config.showSlayerCannonExp()) {
            return null;
        }

        int cannonExpRemaining = plugin.getCannonExperienceRemaining();
        String expStr = NumberFormat.getInstance().format(cannonExpRemaining);
        Color expTextColor = cannonExpRemaining <= 0 ? Color.GREEN : Color.RED;

        panelComponent.getChildren().add(TitleComponent.builder()
                .text("Cannon Slayer XP")
                .color(Color.WHITE)
                .build());

        panelComponent.getChildren().add(TitleComponent.builder()
                .text(expStr)
                .color(expTextColor)
                .build());

        return super.render(graphics);
    }
}

package com.clairemira;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("untrimmedSlayerCapeHelper")
public interface UntrimmedSlayerCapeHelperConfig extends Config
{
	@ConfigItem(
		keyName = "showSlayerCannonExp",
		name = "Show Slayer Cannon XP",
		description = "Show the amount of cannon slayer experience required to obtain 99 Slayer at the same time as 99 Hitpoints."
	)
	default boolean showSlayerCannonExp()
	{
		return true;
	}
}

package com.clairemira;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class UntrimmedSlayerCapeHelperPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(UntrimmedSlayerCapeHelperPlugin.class);
		RuneLite.main(args);
	}
}
