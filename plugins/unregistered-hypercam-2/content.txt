package cloudAspect.hypercam2;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class UnregisteredHypercam2PluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(UnregisteredHypercam2Plugin.class);
		RuneLite.main(args);
	}
}
package cloudAspect.hypercam2;

import com.google.inject.Provides;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import javax.inject.Inject;

@PluginDescriptor(
		name = "Unregistered Hypercam 2",
		description = "Shows the Unregistered Hypercam 2 logo as an overlay",
		tags = {"overlay", "meme", "fun", "cosmetic"}
)
public class UnregisteredHypercam2Plugin extends Plugin {
	
	@Inject
	private OverlayManager overlayManager;
	
	@Inject
	private UnregisteredHypercam2Overlay overlay;
	
	
	
	@Override
	protected void startUp() throws Exception {
		overlayManager.add(overlay);
	}
	
	@Override
	protected void shutDown() throws Exception {
		overlayManager.remove(overlay);
	}
}

package cloudAspect.hypercam2;

import java.awt.*;
import java.awt.image.BufferedImage;
import javax.inject.Inject;

import net.runelite.api.Client;
import net.runelite.client.ui.overlay.Overlay;
import net.runelite.client.ui.overlay.OverlayLayer;
import net.runelite.client.ui.overlay.OverlayPosition;
import net.runelite.client.util.ImageUtil;

class UnregisteredHypercam2Overlay extends Overlay {
	
	private Client client;
	
	private BufferedImage image;
	
	@Inject
	private UnregisteredHypercam2Overlay(Client client) {
		setPosition(OverlayPosition.DYNAMIC);
		setLayer(OverlayLayer.ALWAYS_ON_TOP);
		this.client = client;
		this.image = ImageUtil.loadImageResource(getClass(), "hypercam.png");
	}
	
	@Override
	public Dimension render(Graphics2D graphics) {
		if (image != null) {
			graphics.drawImage(image, 0,  0, null);
		}
		return null;
	}
}

