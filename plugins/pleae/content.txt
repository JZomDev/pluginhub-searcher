package com.pleae;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class PleaePluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(PleaePlugin.class);
		RuneLite.main(args);
	}
}
package com.pleae;

import com.google.inject.Provides;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.*;
import net.runelite.api.events.ActorDeath;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;

import javax.inject.Inject;

@Slf4j
@PluginDescriptor(name = "Pleae")
public class PleaePlugin extends Plugin {
    private static final int OVERHEAD_TEXT_TICK_TIMEOUT = 6;
    public static final int CYCLES_PER_GAME_TICK = Constants.GAME_TICK_LENGTH / Constants.CLIENT_TICK_LENGTH;
    private static final int CYCLES_FOR_OVERHEAD_TEXT = OVERHEAD_TEXT_TICK_TIMEOUT * CYCLES_PER_GAME_TICK;

    @Inject
    private Client client;

    @Inject
    private PleaeConfig config;

    @Provides
    PleaeConfig provideConfig(ConfigManager configManager) {
        return configManager.getConfig(PleaeConfig.class);
    }

    @Subscribe
    public void onActorDeath(ActorDeath actorDeath) {
        Actor actor = actorDeath.getActor();

        if (!(actor instanceof Player)) {
            return;
        }

        Player player = (Player) actor;
        addChatMessage(player);
        addOverheadMessage(player);
    }

    private void addChatMessage(Player player) {
        if (player == null) {
            return;
        }
        if (player == client.getLocalPlayer() && !config.chatMessageForYou()) {
            return;
        }
        if (player != client.getLocalPlayer() && !config.chatMessageForOthers()) {
            return;
        }

        String deathMessage = getDeathMessage();
        if (deathMessage == null) {
            return;
        }

        client.addChatMessage(ChatMessageType.PUBLICCHAT, player.getName(), deathMessage, null);
    }

    private void addOverheadMessage(Player player) {
        if (player == null) {
            return;
        }
        if (player == client.getLocalPlayer() && !config.overheadMessageForYou()) {
            return;
        }
        if (player != client.getLocalPlayer() && !config.overheadMessageForOthers()) {
            return;
        }

        String deathMessage = getDeathMessage();
        if (deathMessage == null) {
            return;
        }

        player.setOverheadText(deathMessage);
        player.setOverheadCycle(CYCLES_FOR_OVERHEAD_TEXT);
    }

    private String getDeathMessage() {
        if (config.deathMessage() == null) {
            return null;
        }

        String configMessage = config.deathMessage().trim();
        return configMessage.length() == 0 ? null : configMessage;
    }
}

package com.pleae;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup("pleae")
public interface PleaeConfig extends Config {
    @ConfigItem(
            keyName = "deathMessage",
            name = "Death Message",
            description = "The message that shows when you or another player dies",
            position = 0
    )
    default String deathMessage() {
        return "Pleae";
    }

    @ConfigItem(
            keyName = "chatMessageForYou",
            name = "Chat Message For You",
            description = "Whether a Pleae message is shown in chat when you die",
            position = 1
    )
    default boolean chatMessageForYou() {
        return true;
    }

    @ConfigItem(
            keyName = "overheadMessageForYou",
            name = "Overhead Message For You",
            description = "Whether a Pleae message is shown over your head when you die",
            position = 2
    )
    default boolean overheadMessageForYou() {
        return true;
    }

    @ConfigItem(
            keyName = "chatMessageForOthers",
            name = "Chat Message For Others",
            description = "Whether a Pleae message is shown in chat when another player dies",
            position = 3
    )
    default boolean chatMessageForOthers() {
        return true;
    }

    @ConfigItem(
            keyName = "overheadMessageForOthers",
            name = "Overhead Message For Others",
            description = "Whether a Pleae message is shown over other players' heads when they die",
            position = 4
    )
    default boolean overheadMessageForOthers() {
        return true;
    }
}

