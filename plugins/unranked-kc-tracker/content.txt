package com.erishiongames.unrankedkctracker;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class UnrankedKcTrackerPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(UnrankedKcTrackerPlugin.class);
		RuneLite.main(args);
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongames.unrankedkctracker;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;

@ConfigGroup(UnrankedKcTrackerPlugin.CONFIG_GROUP)
public interface UnrankedKcTrackerConfig extends Config
{
}

/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongames.unrankedkctracker;

import com.google.inject.Inject;
import java.awt.BorderLayout;
import java.awt.Button;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.EventBus;
import net.runelite.client.ui.ColorScheme;
import net.runelite.client.ui.FontManager;
import net.runelite.client.ui.PluginPanel;

public class UnrankedKcTrackerPanel extends PluginPanel
{
	private JPanel bossPanel;
//	private JPanel nonBossPanel;

	@Inject
	private UnrankedKcTrackerPlugin unrankedKcTrackerPlugin;

	@Inject
	private EventBus eventBus;

	@Inject
	ConfigManager configManager;

	final Font smallFont = FontManager.getRunescapeSmallFont();

	void init()
	{
		setLayout(new FlowLayout());
		setBackground(ColorScheme.DARK_GRAY_COLOR);
		setBorder(new EmptyBorder(10, 10, 10, 10));

		JPanel panel = new JPanel();
		panel.setLayout(new FlowLayout());

		bossPanel = new JPanel();
		bossPanel.setBorder(new EmptyBorder(10, 0, 0, 0));
		bossPanel.setLayout(new GridLayout(0, 1, 0, 0));

//		nonBossPanel = new JPanel();
//		nonBossPanel.setBorder(new EmptyBorder(10, 0, 0, 0));
//		nonBossPanel.setLayout(new GridLayout(0, 1, 0, 0));


		Button refreshKCButton = new Button("Refresh KC");
		refreshKCButton.setFont(smallFont);

		refreshKCButton.setBackground(ColorScheme.DARKER_GRAY_COLOR);

		refreshKCButton.addActionListener(new ActionListener()
		{
			@Override
			public void actionPerformed(ActionEvent e)
			{
				setUpBossKCPanels();
			}
		});

		panel.add(refreshKCButton);

		setUpBossKCPanels();
//		setUpNonBossKCPanels();

		add(panel, BorderLayout.CENTER);
		add(bossPanel, BorderLayout.CENTER);
//		add(nonBossPanel, BorderLayout.CENTER);

		eventBus.register(this);
	}

	void deinit()
	{
		eventBus.unregister(this);
	}

	//Tob entry mode is not working
	public void setUpBossKCPanels()
	{
		bossPanel.removeAll();
		for (Bosses boss : Bosses.values()){
			int kc = getKcFromConfig(boss.getName());

			JLabel tempLabel = new JLabel();
			if(kc >= boss.getMinumiumKC())
			{
				tempLabel.setForeground(ColorScheme.PROGRESS_INPROGRESS_COLOR);
				tempLabel.setToolTipText("KC is greater than or equal to the amount needed to be tracked on high scores, use that value instead");
			}
			else
			{
				tempLabel.setForeground(ColorScheme.PROGRESS_COMPLETE_COLOR);
				tempLabel.setToolTipText("KC is less than the amount needed to be tracked on high scores. Use this value");
			}
			tempLabel.setText(kc +": " + boss.getName());
			tempLabel.setFont(smallFont);
			bossPanel.add(tempLabel);
		}
	}

//	public void setUpNonBossKCPanels()
//	{
//		nonBossPanel.removeAll();
//		int queenKills = unrankedKcTrackerPlugin.queenKills;
//		if(unrankedKcTrackerPlugin.queenKills == null){
//			queenKills = -1;
//		}
//		JLabel queenKillsLabel = new JLabel();
//		queenKillsLabel.setForeground(ColorScheme.PROGRESS_COMPLETE_COLOR);
//		queenKillsLabel.setText(queenKills +": Penance Queen");
//	}




	//From https://github.com/runelite/runelite/blob/master/runelite-client/src/main/java/net/runelite/client/plugins/chatcommands/ChatCommandsPlugin.java
	public int getKcFromConfig(String boss)
	{
		if(configManager == null){
			return 0;
		}
		Integer killCount = configManager.getRSProfileConfiguration("killcount", boss.toLowerCase(), int.class);
		return killCount == null ? 0 : killCount;
	}
}
/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongames.unrankedkctracker;

import com.google.inject.Provides;
import java.awt.image.BufferedImage;
import java.util.concurrent.ScheduledExecutorService;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.ClientToolbar;
import net.runelite.client.ui.NavigationButton;
import net.runelite.client.util.ImageUtil;

@Slf4j
@PluginDescriptor(
	name = "Unranked KC Tracker"
)
public class UnrankedKcTrackerPlugin extends Plugin
{
	public static final String CONFIG_GROUP = "unrankedkctracker";
//	public Widget baShopWidget;
//	public int baShopWidgetID = 32178178;
//	public int queenKills;

	@Inject
	ClientToolbar clientToolbar;

	private UnrankedKcTrackerPanel panel;
	private NavigationButton navigationButton;

	@Inject
	private Client client;

	@Inject
	private UnrankedKcTrackerConfig config;

	@Inject
	private ScheduledExecutorService executor;

	@Override
	protected void startUp() throws Exception
	{
		panel = injector.getInstance(UnrankedKcTrackerPanel.class);
		panel.init();

		final BufferedImage icon = ImageUtil.loadImageResource(getClass(), "icon.png");

		navigationButton = NavigationButton.builder()
			.tooltip("Unranked KC Tracker")
			.icon(icon)
			.priority(20)
			.panel(panel)
			.build();

		clientToolbar.addNavigation(navigationButton);
	}

//	@Subscribe
//	public void onWidgetLoaded(WidgetLoaded widgetLoaded){
//		int groupID = widgetLoaded.getGroupId();
//		if(groupID == 491)
//		{
//			baShopWidget = client.getWidget(baShopWidgetID);
//				//It's okay Intellij, the potential null pointer can't hurt you now
//				assert baShopWidget != null;
//
//			String queenKillsUncleaned = baShopWidget.getChild(27).getText();
//			queenKillsUncleaned = Text.removeTags(queenKillsUncleaned);
//			queenKills = Integer.parseInt(queenKillsUncleaned.substring(12, 14));
//			System.out.println(queenKills);
//		}
//	}


	@Override
	protected void shutDown() throws Exception
	{
		panel.deinit();
		clientToolbar.removeNavigation(navigationButton);
		panel = null;
		navigationButton = null;
	}

	@Provides
	UnrankedKcTrackerConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(UnrankedKcTrackerConfig.class);
	}
}

/* BSD 2-Clause License
 * Copyright (c) 2023, Erishion Games LLC <https://github.com/Erishion-Games-LLC>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.erishiongames.unrankedkctracker;

public enum Bosses
{
	SIRE("Abyssal Sire", 20),
	HYDRA("Alchemical Hydra", 20),
	ARTIO("Artio", 20),
	BARROWS("Barrows Chests", 20),
	BRYO("Bryophyta", 5),
	CALLISTO("Callisto", 20),
	CALVARION("Calvar'ion", 20),
	CERBERUS("Cerberus", 20),
	COX("Chambers of Xeric", 20),
	COX_CM("Chambers of Xeric Challenge Mode", 5),
	CHAOS_ELE("Chaos Elemental", 20),
	CHAOS_FANATIC("Chaos Fanatic", 20),
	SARA("Commander Zilyana", 20),
	CORPOREAL_BEAST("Corporeal Beast", 20),
	CORRUPTED_GAUNTLET("Corrupted Gauntlet", 5),
	CRAZY_ARCH("Crazy Archaeologist", 20),
	PRIME("Dagannoth Prime", 20),
	REX("Dagannoth Rex", 20),
	SUPREME("Dagannoth Supreme", 20),
	DERANGED_ARCH("Deranged Archaeologist", 20),
	GAUNTLET("Gauntlet", 20),
	BANDOS("General Graardor", 20),
	MOLE("Giant Mole", 20),
	GG("Grotesque Guardians", 20),
	HESPORI("Hespori", 5),
	KQ("Kalphite Queen", 20),
	KBD("King Black Dragon", 20),
	KRAKEN("Kraken", 20),
	ARMA("Kree'arra", 20),
	ZAMMY("K'ril Tsutsaroth", 20),
	MIMIC("Mimic", 1),
	NEX("Nex", 20),
	NIGHTMARE("Nightmare", 20),
	OBOR("Obor", 5),
	MUSPAH("Phantom Muspah", 20),
	PH_NIGHTMARE("Phosani's Nightmare", 20),
	SARACHNIS("Sarachnis", 20),
	SCORPIA("Scorpia", 20),
	SKOTIZO("Skotizo", 5),
	SPINDEL("Spindel", 20),
	TEMPOROSS("Tempoross", 20),
	TOB("Theatre of Blood", 20),
	TOB_EM("Theatre of Blood Entry Mode", 20),
	TOB_HM("Theatre of Blood Hard Mode", 20),
	THERMY("Thermonuclear Smoke Devil", 20),
	TOA("Tombs of Amascut", 20),
	TOA_EM("Tombs of Amascut Entry Mode", 20),
	TOA_HM("Tombs of Amascut Expert Mode", 20),
	ZUK("TzKal-Zuk", 1),
	JAD("TzTok-Jad", 5),
	VENENATIS("Venenatis", 20),
	VETION("Vet'ion", 20),
	VORKATH("Vorkath", 20),
	WINTERTODT("Wintertodt", 20),
	ZALCANO("Zalcano", 20),
	ZULRAH("Zulrah", 20),
	;


	private final String name;
	private final int minimumKC;

	Bosses(String name, int minimumKC)
	{
	this.name = name;
	this.minimumKC = minimumKC;
	}

	public String getName(){
		return this.name;
	}
	public int getMinumiumKC(){
		return this.minimumKC;
	}
}



