package com.deathparty;

import net.runelite.client.RuneLite;
import net.runelite.client.externalplugins.ExternalPluginManager;

public class DeathPartyPluginTest
{
	public static void main(String[] args) throws Exception
	{
		ExternalPluginManager.loadBuiltin(DeathPartyPlugin.class);
		RuneLite.main(args);
	}
}
package com.deathparty;

import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor
@Getter
public enum DeathFireworks
{
    NONE("None", -1),
    NORMAL("Normal", 199),
    NINETY_NINE("99", 1388),
    MAX_TOTAL("Max total", 1389),
    ;

    private final String name;
    private final int graphicId;

    @Override
    public String toString()
    {
        return getName();
    }
}


package com.deathparty;

import com.google.inject.Provides;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Actor;
import net.runelite.api.Client;
import net.runelite.api.Player;
import net.runelite.api.events.ActorDeath;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import javax.inject.Inject;
import java.util.List;
import java.util.Timer;

@PluginDescriptor(
		name = "Death Party",
		description = "We're having fun!",
		tags = {"death", "party", "fireworks"}
)
@Slf4j
public class DeathPartyPlugin extends Plugin {

	@Inject
	private Client client;

	@Inject
	private ConfigManager configManager;

	@Inject
	private DeathPartyConfig config;

	@Inject
	private OverlayManager overlayManager;

	private boolean editorMode;
	private Timer refreshTimer;

	@Provides
	DeathPartyConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(DeathPartyConfig.class);
	}

	@Subscribe
	public void onActorDeath(ActorDeath actorDeath)
	{
		Actor actor = actorDeath.getActor();
		if (actor instanceof Player)
		{
			List<Player> players = client.getPlayers();
			for (int i = 0; i < players.size(); i++) {
				Player player = players.get(i);
				if (player != null) {
					final int fireworksGraphic = config.showFireworks().getGraphicId();

					if (fireworksGraphic == -1)
					{
						return;
					}

					player.setGraphic(fireworksGraphic);
					player.setSpotAnimFrame(0);
				}
			}
		}
	}
}

package com.deathparty;

import net.runelite.client.config.Config;
import net.runelite.client.config.ConfigGroup;
import net.runelite.client.config.ConfigItem;

@ConfigGroup(DeathPartyConfig.GROUP)
public interface DeathPartyConfig extends Config
{
	String GROUP = "deathparty";

	@ConfigItem(
			keyName = "showFireworks",
			name = "Level-up fireworks style",
			description = "Type of fireworks which will be triggered a nearby player dies"
	)
	default DeathFireworks showFireworks()
	{
		return DeathFireworks.NINETY_NINE;
	}
}

